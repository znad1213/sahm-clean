{
  "version": 3,
  "sources": ["../../@radix-ui/react-select/node_modules/@radix-ui/number/dist/packages/core/number/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/number/dist/packages/core/number/src/number.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/primitive/dist/packages/core/primitive/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/primitive/dist/packages/core/primitive/src/primitive.tsx", "../../@radix-ui/react-select/node_modules/@radix-ui/react-context/dist/packages/react/context/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/react-context/dist/packages/react/context/src/createContext.tsx", "../../@radix-ui/react-select/node_modules/@radix-ui/react-compose-refs/dist/packages/react/compose-refs/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/react-compose-refs/dist/packages/react/compose-refs/src/composeRefs.tsx", "../../@radix-ui/react-select/node_modules/@radix-ui/react-slot/dist/packages/react/slot/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/react-slot/dist/packages/react/slot/src/Slot.tsx", "../../@radix-ui/react-select/node_modules/@radix-ui/react-collection/dist/packages/react/collection/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/react-collection/dist/packages/react/collection/src/Collection.tsx", "../../@radix-ui/react-select/node_modules/@radix-ui/react-direction/dist/packages/react/direction/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/react-direction/dist/packages/react/direction/src/Direction.tsx", "../../@radix-ui/react-select/node_modules/@radix-ui/react-primitive/dist/packages/react/primitive/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/react-primitive/dist/packages/react/primitive/src/Primitive.tsx", "../../@radix-ui/react-select/node_modules/@radix-ui/react-use-callback-ref/dist/packages/react/use-callback-ref/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/react-use-callback-ref/dist/packages/react/use-callback-ref/src/useCallbackRef.tsx", "../../@radix-ui/react-select/node_modules/@radix-ui/react-use-escape-keydown/dist/packages/react/use-escape-keydown/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/react-use-escape-keydown/dist/packages/react/use-escape-keydown/src/useEscapeKeydown.tsx", "../../@radix-ui/react-select/node_modules/@radix-ui/react-dismissable-layer/dist/packages/react/dismissable-layer/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/react-dismissable-layer/dist/packages/react/dismissable-layer/src/DismissableLayer.tsx", "../../@radix-ui/react-select/node_modules/@radix-ui/react-focus-guards/dist/packages/react/focus-guards/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/react-focus-guards/dist/packages/react/focus-guards/src/FocusGuards.tsx", "../../@radix-ui/react-select/node_modules/@radix-ui/react-focus-scope/dist/packages/react/focus-scope/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/react-focus-scope/dist/packages/react/focus-scope/src/FocusScope.tsx", "../../@radix-ui/react-select/node_modules/@radix-ui/react-use-layout-effect/dist/packages/react/use-layout-effect/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/react-use-layout-effect/dist/packages/react/use-layout-effect/src/useLayoutEffect.tsx", "../../@radix-ui/react-select/node_modules/@radix-ui/react-id/dist/packages/react/id/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/react-id/dist/packages/react/id/src/id.tsx", "../../@radix-ui/react-select/node_modules/@radix-ui/react-arrow/dist/packages/react/arrow/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/react-arrow/dist/packages/react/arrow/src/Arrow.tsx", "../../@radix-ui/react-select/node_modules/@radix-ui/react-use-size/dist/packages/react/use-size/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/react-use-size/dist/packages/react/use-size/src/useSize.tsx", "../../@radix-ui/react-select/node_modules/@radix-ui/react-popper/dist/packages/react/popper/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/react-popper/dist/packages/react/popper/src/Popper.tsx", "../../@radix-ui/react-select/node_modules/@radix-ui/react-portal/dist/packages/react/portal/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/react-portal/dist/packages/react/portal/src/Portal.tsx", "../../@radix-ui/react-select/node_modules/@radix-ui/react-use-controllable-state/dist/packages/react/use-controllable-state/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/react-use-controllable-state/dist/packages/react/use-controllable-state/src/useControllableState.tsx", "../../@radix-ui/react-select/node_modules/@radix-ui/react-use-previous/dist/packages/react/use-previous/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/react-use-previous/dist/packages/react/use-previous/src/usePrevious.tsx", "../../@radix-ui/react-select/node_modules/@radix-ui/react-visually-hidden/dist/packages/react/visually-hidden/src/index.ts", "../../@radix-ui/react-select/node_modules/@radix-ui/react-visually-hidden/dist/packages/react/visually-hidden/src/VisuallyHidden.tsx", "../../@radix-ui/react-select/node_modules/react-remove-scroll/dist/es2015/Combination.js", "../../@radix-ui/react-select/node_modules/react-remove-scroll/dist/es2015/UI.js", "../../@radix-ui/react-select/node_modules/react-remove-scroll/dist/es2015/medium.js", "../../@radix-ui/react-select/node_modules/react-remove-scroll/dist/es2015/SideEffect.js", "../../@radix-ui/react-select/node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js", "../../@radix-ui/react-select/node_modules/react-remove-scroll/dist/es2015/handleScroll.js", "../../@radix-ui/react-select/node_modules/react-remove-scroll/dist/es2015/sidecar.js", "../../@radix-ui/react-select/dist/packages/react/select/src/index.ts", "../../@radix-ui/react-select/dist/packages/react/select/src/Select.tsx"],
  "sourcesContent": ["export { clamp } from './number';\n", "function clamp(value: number, [min, max]: [number, number]): number {\n  return Math.min(max, Math.max(min, value));\n}\n\nexport { clamp };\n", "export { composeEventHandlers } from './primitive';\n", "function composeEventHandlers<E>(\n  originalEventHandler?: (event: E) => void,\n  ourEventHandler?: (event: E) => void,\n  { checkForDefaultPrevented = true } = {}\n) {\n  return function handleEvent(event: E) {\n    originalEventHandler?.(event);\n\n    if (checkForDefaultPrevented === false || !((event as unknown) as Event).defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\n\nexport { composeEventHandlers };\n", "export { createContext, createContextScope } from './createContext';\nexport type { CreateScope, Scope } from './createContext';\n", "import * as React from 'react';\n\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext);\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext;\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined;\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope };\ninterface CreateScope {\n  scopeName: string;\n  (): ScopeHook;\n}\n\nfunction createContextScope(scopeName: string, createContextScopeDeps: CreateScope[] = []) {\n  let defaultContexts: any[] = [];\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n\n    function Provider(\n      props: ContextValueType & { scope: Scope<ContextValueType>; children: React.ReactNode }\n    ) {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName][index] || BaseContext;\n      // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n      return <Context.Provider value={value}>{children}</Context.Provider>;\n    }\n\n    function useContext(consumerName: string, scope: Scope<ContextValueType | undefined>) {\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext;\n      // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n\n    Provider.displayName = rootComponentName + 'Provider';\n    return [Provider, useContext] as const;\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n\n  createScope.scopeName = scopeName;\n  return [createContext, composeContextScopes(createScope, ...createContextScopeDeps)] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }));\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes, ...currentScope };\n      }, {});\n\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { createContext, createContextScope };\nexport type { CreateScope, Scope };\n", "export { composeRefs, useComposedRefs } from './composeRefs';\n", "import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    (ref as React.MutableRefObject<T>).current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]) {\n  return (node: T) => refs.forEach((ref) => setRef(ref, node));\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n", "export {\n  Slot,\n  Slottable,\n  //\n  Root,\n} from './Slot';\nexport type { SlotProps } from './Slot';\n", "import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\nconst Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n\n  if (slottable) {\n    // the new element to render is the one passed as a child of `Slottable`\n    const newElement = slottable.props.children as React.ReactNode;\n\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        // because the new element will be the one rendered, we are only interested\n        // in grabbing its children (`newElement.props.children`)\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement)\n          ? (newElement.props.children as React.ReactNode)\n          : null;\n      } else {\n        return child;\n      }\n    });\n\n    return (\n      <SlotClone {...slotProps} ref={forwardedRef}>\n        {React.isValidElement(newElement)\n          ? React.cloneElement(newElement, undefined, newChildren)\n          : null}\n      </SlotClone>\n    );\n  }\n\n  return (\n    <SlotClone {...slotProps} ref={forwardedRef}>\n      {children}\n    </SlotClone>\n  );\n});\n\nSlot.displayName = 'Slot';\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\nconst SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.isValidElement(children)) {\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      ref: forwardedRef ? composeRefs(forwardedRef, (children as any).ref) : (children as any).ref,\n    });\n  }\n\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\n\nSlotClone.displayName = 'SlotClone';\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst Slottable = ({ children }: { children: React.ReactNode }) => {\n  return <>{children}</>;\n};\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(child: React.ReactNode): child is React.ReactElement {\n  return React.isValidElement(child) && child.type === Slottable;\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      // if the handler exists on both, we compose them\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args: unknown[]) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      }\n      // but if it exists only on the slot, we use only this one\n      else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\nconst Root = Slot;\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Root,\n};\nexport type { SlotProps };\n", "export { createCollection } from './Collection';\nexport type { CollectionProps } from './Collection';\n", "import React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\ntype SlotProps = Radix.ComponentPropsWithoutRef<typeof Slot>;\ntype CollectionElement = HTMLElement;\ninterface CollectionProps extends SlotProps {\n  scope: any;\n}\n\n// We have resorted to returning slots directly rather than exposing primitives that can then\n// be slotted like `<CollectionItem as={Slot}>…</CollectionItem>`.\n// This is because we encountered issues with generic types that cannot be statically analysed\n// due to creating them dynamically via createCollection.\n\nfunction createCollection<ItemElement extends HTMLElement, ItemData = {}>(name: string) {\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionProvider\n   * ---------------------------------------------------------------------------------------------*/\n\n  const PROVIDER_NAME = name + 'CollectionProvider';\n  const [createCollectionContext, createCollectionScope] = createContextScope(PROVIDER_NAME);\n\n  type ContextValue = {\n    collectionRef: React.RefObject<CollectionElement>;\n    itemMap: Map<React.RefObject<ItemElement>, { ref: React.RefObject<ItemElement> } & ItemData>;\n  };\n\n  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext<ContextValue>(\n    PROVIDER_NAME,\n    { collectionRef: { current: null }, itemMap: new Map() }\n  );\n\n  const CollectionProvider: React.FC<{ children?: React.ReactNode; scope: any }> = (props) => {\n    const { scope, children } = props;\n    const ref = React.useRef<CollectionElement>(null);\n    const itemMap = React.useRef<ContextValue['itemMap']>(new Map()).current;\n    return (\n      <CollectionProviderImpl scope={scope} itemMap={itemMap} collectionRef={ref}>\n        {children}\n      </CollectionProviderImpl>\n    );\n  };\n\n  CollectionProvider.displayName = PROVIDER_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionSlot\n   * ---------------------------------------------------------------------------------------------*/\n\n  const COLLECTION_SLOT_NAME = name + 'CollectionSlot';\n\n  const CollectionSlot = React.forwardRef<CollectionElement, CollectionProps>(\n    (props, forwardedRef) => {\n      const { scope, children } = props;\n      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n      const composedRefs = useComposedRefs(forwardedRef, context.collectionRef);\n      return <Slot ref={composedRefs}>{children}</Slot>;\n    }\n  );\n\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionItem\n   * ---------------------------------------------------------------------------------------------*/\n\n  const ITEM_SLOT_NAME = name + 'CollectionItemSlot';\n  const ITEM_DATA_ATTR = 'data-radix-collection-item';\n\n  type CollectionItemSlotProps = ItemData & {\n    children: React.ReactNode;\n    scope: any;\n  };\n\n  const CollectionItemSlot = React.forwardRef<ItemElement, CollectionItemSlotProps>(\n    (props, forwardedRef) => {\n      const { scope, children, ...itemData } = props;\n      const ref = React.useRef<ItemElement>(null);\n      const composedRefs = useComposedRefs(forwardedRef, ref);\n      const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n\n      React.useEffect(() => {\n        context.itemMap.set(ref, { ref, ...(itemData as unknown as ItemData) });\n        return () => void context.itemMap.delete(ref);\n      });\n\n      return (\n        <Slot {...{ [ITEM_DATA_ATTR]: '' }} ref={composedRefs}>\n          {children}\n        </Slot>\n      );\n    }\n  );\n\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * useCollection\n   * ---------------------------------------------------------------------------------------------*/\n\n  function useCollection(scope: any) {\n    const context = useCollectionContext(name + 'CollectionConsumer', scope);\n\n    const getItems = React.useCallback(() => {\n      const collectionNode = context.collectionRef.current;\n      if (!collectionNode) return [];\n      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));\n      const items = Array.from(context.itemMap.values());\n      const orderedItems = items.sort(\n        (a, b) => orderedNodes.indexOf(a.ref.current!) - orderedNodes.indexOf(b.ref.current!)\n      );\n      return orderedItems;\n    }, [context.collectionRef, context.itemMap]);\n\n    return getItems;\n  }\n\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    useCollection,\n    createCollectionScope,\n  ] as const;\n}\n\nexport { createCollection };\nexport type { CollectionProps };\n", "export {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n} from './Direction';\n", "import * as React from 'react';\n\ntype Direction = 'ltr' | 'rtl';\nconst DirectionContext = React.createContext<Direction | undefined>(undefined);\n\n/* -------------------------------------------------------------------------------------------------\n * Direction\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DirectionProviderProps {\n  children?: React.ReactNode;\n  dir: Direction;\n}\nconst DirectionProvider: React.FC<DirectionProviderProps> = (props) => {\n  const { dir, children } = props;\n  return <DirectionContext.Provider value={dir}>{children}</DirectionContext.Provider>;\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useDirection(localDir?: Direction) {\n  const globalDir = React.useContext(DirectionContext);\n  return localDir || globalDir || 'ltr';\n}\n\nconst Provider = DirectionProvider;\n\nexport {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n};\n", "export {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n} from './Primitive';\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef } from './Primitive';\n", "import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'form',\n  'h2',\n  'h3',\n  'img',\n  'input',\n  'label',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\n// Temporary while we await merge of this fix:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/55396\n// prettier-ignore\ntype PropsWithoutRef<P> = P extends any ? ('ref' extends keyof P ? Pick<P, Exclude<keyof P, 'ref'>> : P) : P;\ntype ComponentPropsWithoutRef<T extends React.ElementType> = PropsWithoutRef<\n  React.ComponentProps<T>\n>;\n\ntype Primitives = { [E in typeof NODES[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce((primitive, node) => {\n  const Node = React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp: any = asChild ? Slot : node;\n\n    React.useEffect(() => {\n      (window as any)[Symbol.for('radix-ui')] = true;\n    }, []);\n\n    return <Comp {...primitiveProps} ref={forwardedRef} />;\n  });\n\n  Node.displayName = `Primitive.${node}`;\n\n  return { ...primitive, [node]: Node };\n}, {} as Primitives);\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Flush custom event dispatch\n * https://github.com/radix-ui/primitives/pull/1378\n *\n * React batches *all* event handlers since version 18, this introduces certain considerations when using custom event types.\n *\n * Internally, React prioritises events in the following order:\n *  - discrete\n *  - continuous\n *  - default\n *\n * https://github.com/facebook/react/blob/a8a4742f1c54493df00da648a3f9d26e3db9c8b5/packages/react-dom/src/events/ReactDOMEventListener.js#L294-L350\n *\n * `discrete` is an  important distinction as updates within these events are applied immediately.\n * React however, is not able to infer the priority of custom event types due to how they are detected internally.\n * Because of this, it's possible for updates from custom events to be unexpectedly batched when\n * dispatched by another `discrete` event.\n *\n * In order to ensure that updates from custom events are applied predictably, we need to manually flush the batch.\n * This utility should be used when dispatching a custom event from within another `discrete` event, this utility\n * is not nessesary when dispatching known event types, or if dispatching a custom type inside a non-discrete event.\n * For example:\n *\n * dispatching a known click 👎\n * target.dispatchEvent(new Event(‘click’))\n *\n * dispatching a custom type within a non-discrete event 👎\n * onScroll={(event) => event.target.dispatchEvent(new CustomEvent(‘customType’))}\n *\n * dispatching a custom type within a `discrete` event 👍\n * onPointerDown={(event) => dispatchDiscreteCustomEvent(event.target, new CustomEvent(‘customType’))}\n *\n * Note: though React classifies `focus`, `focusin` and `focusout` events as `discrete`, it's  not recommended to use\n * this utility with them. This is because it's possible for those handlers to be called implicitly during render\n * e.g. when focus is within a component as it is unmounted, or when managing focus on mount.\n */\n\nfunction dispatchDiscreteCustomEvent<E extends CustomEvent>(target: E['target'], event: E) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n};\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef };\n", "export { useCallbackRef } from './useCallbackRef';\n", "import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n\nexport { useCallbackRef };\n", "export { useEscapeKeydown } from './useEscapeKeydown';\n", "import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\n/**\n * Listens for when the escape key is down\n */\nfunction useEscapeKeydown(\n  onEscapeKeyDownProp?: (event: KeyboardEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const onEscapeKeyDown = useCallbackRef(onEscapeKeyDownProp);\n\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onEscapeKeyDown(event);\n      }\n    };\n    ownerDocument.addEventListener('keydown', handleKeyDown);\n    return () => ownerDocument.removeEventListener('keydown', handleKeyDown);\n  }, [onEscapeKeyDown, ownerDocument]);\n}\n\nexport { useEscapeKeydown };\n", "export {\n  DismissableLayer,\n  DismissableLayerBranch,\n  //\n  Root,\n  Branch,\n} from './DismissableLayer';\nexport type { DismissableLayerProps } from './DismissableLayer';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useEscapeKeydown } from '@radix-ui/react-use-escape-keydown';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayer\n * -----------------------------------------------------------------------------------------------*/\n\nconst DISMISSABLE_LAYER_NAME = 'DismissableLayer';\nconst CONTEXT_UPDATE = 'dismissableLayer.update';\nconst POINTER_DOWN_OUTSIDE = 'dismissableLayer.pointerDownOutside';\nconst FOCUS_OUTSIDE = 'dismissableLayer.focusOutside';\n\nlet originalBodyPointerEvents: string;\n\nconst DismissableLayerContext = React.createContext({\n  layers: new Set<DismissableLayerElement>(),\n  layersWithOutsidePointerEventsDisabled: new Set<DismissableLayerElement>(),\n  branches: new Set<DismissableLayerBranchElement>(),\n});\n\ntype DismissableLayerElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DismissableLayerProps extends PrimitiveDivProps {\n  /**\n   * When `true`, hover/focus/click interactions will be disabled on elements outside\n   * the `DismissableLayer`. Users will need to click twice on outside elements to\n   * interact with them: once to close the `DismissableLayer`, and again to trigger the element.\n   */\n  disableOutsidePointerEvents?: boolean;\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: (event: KeyboardEvent) => void;\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void;\n  /**\n   * Event handler called when the focus moves outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onFocusOutside?: (event: FocusOutsideEvent) => void;\n  /**\n   * Event handler called when an interaction happens outside the `DismissableLayer`.\n   * Specifically, when a `pointerdown` event happens outside or focus moves outside of it.\n   * Can be prevented.\n   */\n  onInteractOutside?: (event: PointerDownOutsideEvent | FocusOutsideEvent) => void;\n  /**\n   * Handler called when the `DismissableLayer` should be dismissed\n   */\n  onDismiss?: () => void;\n}\n\nconst DismissableLayer = React.forwardRef<DismissableLayerElement, DismissableLayerProps>(\n  (props, forwardedRef) => {\n    const {\n      disableOutsidePointerEvents = false,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      ...layerProps\n    } = props;\n    const context = React.useContext(DismissableLayerContext);\n    const [node, setNode] = React.useState<DismissableLayerElement | null>(null);\n    const ownerDocument = node?.ownerDocument ?? globalThis?.document;\n    const [, force] = React.useState({});\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setNode(node));\n    const layers = Array.from(context.layers);\n    const [highestLayerWithOutsidePointerEventsDisabled] = [...context.layersWithOutsidePointerEventsDisabled].slice(-1); // prettier-ignore\n    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled); // prettier-ignore\n    const index = node ? layers.indexOf(node) : -1;\n    const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;\n    const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;\n\n    const pointerDownOutside = usePointerDownOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isPointerDownOnBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (!isPointerEventsEnabled || isPointerDownOnBranch) return;\n      onPointerDownOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n\n    const focusOutside = useFocusOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isFocusInBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (isFocusInBranch) return;\n      onFocusOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n\n    useEscapeKeydown((event) => {\n      const isHighestLayer = index === context.layers.size - 1;\n      if (!isHighestLayer) return;\n      onEscapeKeyDown?.(event);\n      if (!event.defaultPrevented && onDismiss) {\n        event.preventDefault();\n        onDismiss();\n      }\n    }, ownerDocument);\n\n    React.useEffect(() => {\n      if (!node) return;\n      if (disableOutsidePointerEvents) {\n        if (context.layersWithOutsidePointerEventsDisabled.size === 0) {\n          originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;\n          ownerDocument.body.style.pointerEvents = 'none';\n        }\n        context.layersWithOutsidePointerEventsDisabled.add(node);\n      }\n      context.layers.add(node);\n      dispatchUpdate();\n      return () => {\n        if (\n          disableOutsidePointerEvents &&\n          context.layersWithOutsidePointerEventsDisabled.size === 1\n        ) {\n          ownerDocument.body.style.pointerEvents = originalBodyPointerEvents;\n        }\n      };\n    }, [node, ownerDocument, disableOutsidePointerEvents, context]);\n\n    /**\n     * We purposefully prevent combining this effect with the `disableOutsidePointerEvents` effect\n     * because a change to `disableOutsidePointerEvents` would remove this layer from the stack\n     * and add it to the end again so the layering order wouldn't be _creation order_.\n     * We only want them to be removed from context stacks when unmounted.\n     */\n    React.useEffect(() => {\n      return () => {\n        if (!node) return;\n        context.layers.delete(node);\n        context.layersWithOutsidePointerEventsDisabled.delete(node);\n        dispatchUpdate();\n      };\n    }, [node, context]);\n\n    React.useEffect(() => {\n      const handleUpdate = () => force({});\n      document.addEventListener(CONTEXT_UPDATE, handleUpdate);\n      return () => document.removeEventListener(CONTEXT_UPDATE, handleUpdate);\n    }, []);\n\n    return (\n      <Primitive.div\n        {...layerProps}\n        ref={composedRefs}\n        style={{\n          pointerEvents: isBodyPointerEventsDisabled\n            ? isPointerEventsEnabled\n              ? 'auto'\n              : 'none'\n            : undefined,\n          ...props.style,\n        }}\n        onFocusCapture={composeEventHandlers(props.onFocusCapture, focusOutside.onFocusCapture)}\n        onBlurCapture={composeEventHandlers(props.onBlurCapture, focusOutside.onBlurCapture)}\n        onPointerDownCapture={composeEventHandlers(\n          props.onPointerDownCapture,\n          pointerDownOutside.onPointerDownCapture\n        )}\n      />\n    );\n  }\n);\n\nDismissableLayer.displayName = DISMISSABLE_LAYER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayerBranch\n * -----------------------------------------------------------------------------------------------*/\n\nconst BRANCH_NAME = 'DismissableLayerBranch';\n\ntype DismissableLayerBranchElement = React.ElementRef<typeof Primitive.div>;\ninterface DismissableLayerBranchProps extends PrimitiveDivProps {}\n\nconst DismissableLayerBranch = React.forwardRef<\n  DismissableLayerBranchElement,\n  DismissableLayerBranchProps\n>((props, forwardedRef) => {\n  const context = React.useContext(DismissableLayerContext);\n  const ref = React.useRef<DismissableLayerBranchElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      context.branches.add(node);\n      return () => {\n        context.branches.delete(node);\n      };\n    }\n  }, [context.branches]);\n\n  return <Primitive.div {...props} ref={composedRefs} />;\n});\n\nDismissableLayerBranch.displayName = BRANCH_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PointerDownOutsideEvent = CustomEvent<{ originalEvent: PointerEvent }>;\ntype FocusOutsideEvent = CustomEvent<{ originalEvent: FocusEvent }>;\n\n/**\n * Listens for `pointerdown` outside a react subtree. We use `pointerdown` rather than `pointerup`\n * to mimic layer dismissing behaviour present in OS.\n * Returns props to pass to the node we want to check for outside events.\n */\nfunction usePointerDownOutside(\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const handlePointerDownOutside = useCallbackRef(onPointerDownOutside) as EventListener;\n  const isPointerInsideReactTreeRef = React.useRef(false);\n  const handleClickRef = React.useRef(() => {});\n\n  React.useEffect(() => {\n    const handlePointerDown = (event: PointerEvent) => {\n      if (event.target && !isPointerInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n\n        function handleAndDispatchPointerDownOutsideEvent() {\n          handleAndDispatchCustomEvent(\n            POINTER_DOWN_OUTSIDE,\n            handlePointerDownOutside,\n            eventDetail,\n            { discrete: true }\n          );\n        }\n\n        /**\n         * On touch devices, we need to wait for a click event because browsers implement\n         * a ~350ms delay between the time the user stops touching the display and when the\n         * browser executres events. We need to ensure we don't reactivate pointer-events within\n         * this timeframe otherwise the browser may execute events that should have been prevented.\n         *\n         * Additionally, this also lets us deal automatically with cancellations when a click event\n         * isn't raised because the page was considered scrolled/drag-scrolled, long-pressed, etc.\n         *\n         * This is why we also continuously remove the previous listener, because we cannot be\n         * certain that it was raised, and therefore cleaned-up.\n         */\n        if (event.pointerType === 'touch') {\n          ownerDocument.removeEventListener('click', handleClickRef.current);\n          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent;\n          ownerDocument.addEventListener('click', handleClickRef.current, { once: true });\n        } else {\n          handleAndDispatchPointerDownOutsideEvent();\n        }\n      } else {\n        // We need to remove the event listener in case the outside click has been canceled.\n        // See: https://github.com/radix-ui/primitives/issues/2171\n        ownerDocument.removeEventListener('click', handleClickRef.current);\n      }\n      isPointerInsideReactTreeRef.current = false;\n    };\n    /**\n     * if this hook executes in a component that mounts via a `pointerdown` event, the event\n     * would bubble up to the document and trigger a `pointerDownOutside` event. We avoid\n     * this by delaying the event listener registration on the document.\n     * This is not React specific, but rather how the DOM works, ie:\n     * ```\n     * button.addEventListener('pointerdown', () => {\n     *   console.log('I will log');\n     *   document.addEventListener('pointerdown', () => {\n     *     console.log('I will also log');\n     *   })\n     * });\n     */\n    const timerId = window.setTimeout(() => {\n      ownerDocument.addEventListener('pointerdown', handlePointerDown);\n    }, 0);\n    return () => {\n      window.clearTimeout(timerId);\n      ownerDocument.removeEventListener('pointerdown', handlePointerDown);\n      ownerDocument.removeEventListener('click', handleClickRef.current);\n    };\n  }, [ownerDocument, handlePointerDownOutside]);\n\n  return {\n    // ensures we check React component tree (not just DOM tree)\n    onPointerDownCapture: () => (isPointerInsideReactTreeRef.current = true),\n  };\n}\n\n/**\n * Listens for when focus happens outside a react subtree.\n * Returns props to pass to the root (node) of the subtree we want to check.\n */\nfunction useFocusOutside(\n  onFocusOutside?: (event: FocusOutsideEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const handleFocusOutside = useCallbackRef(onFocusOutside) as EventListener;\n  const isFocusInsideReactTreeRef = React.useRef(false);\n\n  React.useEffect(() => {\n    const handleFocus = (event: FocusEvent) => {\n      if (event.target && !isFocusInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n        handleAndDispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {\n          discrete: false,\n        });\n      }\n    };\n    ownerDocument.addEventListener('focusin', handleFocus);\n    return () => ownerDocument.removeEventListener('focusin', handleFocus);\n  }, [ownerDocument, handleFocusOutside]);\n\n  return {\n    onFocusCapture: () => (isFocusInsideReactTreeRef.current = true),\n    onBlurCapture: () => (isFocusInsideReactTreeRef.current = false),\n  };\n}\n\nfunction dispatchUpdate() {\n  const event = new CustomEvent(CONTEXT_UPDATE);\n  document.dispatchEvent(event);\n}\n\nfunction handleAndDispatchCustomEvent<E extends CustomEvent, OriginalEvent extends Event>(\n  name: string,\n  handler: ((event: E) => void) | undefined,\n  detail: { originalEvent: OriginalEvent } & (E extends CustomEvent<infer D> ? D : never),\n  { discrete }: { discrete: boolean }\n) {\n  const target = detail.originalEvent.target;\n  const event = new CustomEvent(name, { bubbles: false, cancelable: true, detail });\n  if (handler) target.addEventListener(name, handler as EventListener, { once: true });\n\n  if (discrete) {\n    dispatchDiscreteCustomEvent(target, event);\n  } else {\n    target.dispatchEvent(event);\n  }\n}\n\nconst Root = DismissableLayer;\nconst Branch = DismissableLayerBranch;\n\nexport {\n  DismissableLayer,\n  DismissableLayerBranch,\n  //\n  Root,\n  Branch,\n};\nexport type { DismissableLayerProps };\n", "export {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n} from './FocusGuards';\n", "import * as React from 'react';\n\n/** Number of components which have requested interest to have focus guards */\nlet count = 0;\n\nfunction FocusGuards(props: any) {\n  useFocusGuards();\n  return props.children;\n}\n\n/**\n * Injects a pair of focus guards at the edges of the whole DOM tree\n * to ensure `focusin` & `focusout` events can be caught consistently.\n */\nfunction useFocusGuards() {\n  React.useEffect(() => {\n    const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');\n    document.body.insertAdjacentElement('afterbegin', edgeGuards[0] ?? createFocusGuard());\n    document.body.insertAdjacentElement('beforeend', edgeGuards[1] ?? createFocusGuard());\n    count++;\n\n    return () => {\n      if (count === 1) {\n        document.querySelectorAll('[data-radix-focus-guard]').forEach((node) => node.remove());\n      }\n      count--;\n    };\n  }, []);\n}\n\nfunction createFocusGuard() {\n  const element = document.createElement('span');\n  element.setAttribute('data-radix-focus-guard', '');\n  element.tabIndex = 0;\n  element.style.cssText = 'outline: none; opacity: 0; position: fixed; pointer-events: none';\n  return element;\n}\n\nconst Root = FocusGuards;\n\nexport {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n};\n", "export {\n  FocusScope,\n  //\n  Root,\n} from './FocusScope';\nexport type { FocusScopeProps } from './FocusScope';\n", "import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\nconst AUTOFOCUS_ON_MOUNT = 'focusScope.autoFocusOnMount';\nconst AUTOFOCUS_ON_UNMOUNT = 'focusScope.autoFocusOnUnmount';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\ntype FocusableTarget = HTMLElement | { focus(): void };\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope\n * -----------------------------------------------------------------------------------------------*/\n\nconst FOCUS_SCOPE_NAME = 'FocusScope';\n\ntype FocusScopeElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface FocusScopeProps extends PrimitiveDivProps {\n  /**\n   * When `true`, tabbing from last item will focus first tabbable\n   * and shift+tab from first item will focus last tababble.\n   * @defaultValue false\n   */\n  loop?: boolean;\n\n  /**\n   * When `true`, focus cannot escape the focus scope via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapped?: boolean;\n\n  /**\n   * Event handler called when auto-focusing on mount.\n   * Can be prevented.\n   */\n  onMountAutoFocus?: (event: Event) => void;\n\n  /**\n   * Event handler called when auto-focusing on unmount.\n   * Can be prevented.\n   */\n  onUnmountAutoFocus?: (event: Event) => void;\n}\n\nconst FocusScope = React.forwardRef<FocusScopeElement, FocusScopeProps>((props, forwardedRef) => {\n  const {\n    loop = false,\n    trapped = false,\n    onMountAutoFocus: onMountAutoFocusProp,\n    onUnmountAutoFocus: onUnmountAutoFocusProp,\n    ...scopeProps\n  } = props;\n  const [container, setContainer] = React.useState<HTMLElement | null>(null);\n  const onMountAutoFocus = useCallbackRef(onMountAutoFocusProp);\n  const onUnmountAutoFocus = useCallbackRef(onUnmountAutoFocusProp);\n  const lastFocusedElementRef = React.useRef<HTMLElement | null>(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContainer(node));\n\n  const focusScope = React.useRef({\n    paused: false,\n    pause() {\n      this.paused = true;\n    },\n    resume() {\n      this.paused = false;\n    },\n  }).current;\n\n  // Takes care of trapping focus if focus is moved outside programmatically for example\n  React.useEffect(() => {\n    if (trapped) {\n      function handleFocusIn(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        const target = event.target as HTMLElement | null;\n        if (container.contains(target)) {\n          lastFocusedElementRef.current = target;\n        } else {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      function handleFocusOut(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        const relatedTarget = event.relatedTarget as HTMLElement | null;\n\n        // A `focusout` event with a `null` `relatedTarget` will happen in at least two cases:\n        //\n        // 1. When the user switches app/tabs/windows/the browser itself loses focus.\n        // 2. In Google Chrome, when the focused element is removed from the DOM.\n        //\n        // We let the browser do its thing here because:\n        //\n        // 1. The browser already keeps a memory of what's focused for when the page gets refocused.\n        // 2. In Google Chrome, if we try to focus the deleted focused element (as per below), it\n        //    throws the CPU to 100%, so we avoid doing anything for this reason here too.\n        if (relatedTarget === null) return;\n\n        // If the focus has moved to an actual legitimate element (`relatedTarget !== null`)\n        // that is outside the container, we move focus to the last valid focused element inside.\n        if (!container.contains(relatedTarget)) {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      // When the focused element gets removed from the DOM, browsers move focus\n      // back to the document.body. In this case, we move focus to the container\n      // to keep focus trapped correctly.\n      function handleMutations(mutations: MutationRecord[]) {\n        const focusedElement = document.activeElement as HTMLElement | null;\n        if (focusedElement !== document.body) return;\n        for (const mutation of mutations) {\n          if (mutation.removedNodes.length > 0) focus(container);\n        }\n      }\n\n      document.addEventListener('focusin', handleFocusIn);\n      document.addEventListener('focusout', handleFocusOut);\n      const mutationObserver = new MutationObserver(handleMutations);\n      if (container) mutationObserver.observe(container, { childList: true, subtree: true });\n\n      return () => {\n        document.removeEventListener('focusin', handleFocusIn);\n        document.removeEventListener('focusout', handleFocusOut);\n        mutationObserver.disconnect();\n      };\n    }\n  }, [trapped, container, focusScope.paused]);\n\n  React.useEffect(() => {\n    if (container) {\n      focusScopesStack.add(focusScope);\n      const previouslyFocusedElement = document.activeElement as HTMLElement | null;\n      const hasFocusedCandidate = container.contains(previouslyFocusedElement);\n\n      if (!hasFocusedCandidate) {\n        const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS);\n        container.addEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n        container.dispatchEvent(mountEvent);\n        if (!mountEvent.defaultPrevented) {\n          focusFirst(removeLinks(getTabbableCandidates(container)), { select: true });\n          if (document.activeElement === previouslyFocusedElement) {\n            focus(container);\n          }\n        }\n      }\n\n      return () => {\n        container.removeEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n\n        // We hit a react bug (fixed in v17) with focusing in unmount.\n        // We need to delay the focus a little to get around it for now.\n        // See: https://github.com/facebook/react/issues/17894\n        setTimeout(() => {\n          const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS);\n          container.addEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n          container.dispatchEvent(unmountEvent);\n          if (!unmountEvent.defaultPrevented) {\n            focus(previouslyFocusedElement ?? document.body, { select: true });\n          }\n          // we need to remove the listener after we `dispatchEvent`\n          container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n\n          focusScopesStack.remove(focusScope);\n        }, 0);\n      };\n    }\n  }, [container, onMountAutoFocus, onUnmountAutoFocus, focusScope]);\n\n  // Takes care of looping focus (when tabbing whilst at the edges)\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (!loop && !trapped) return;\n      if (focusScope.paused) return;\n\n      const isTabKey = event.key === 'Tab' && !event.altKey && !event.ctrlKey && !event.metaKey;\n      const focusedElement = document.activeElement as HTMLElement | null;\n\n      if (isTabKey && focusedElement) {\n        const container = event.currentTarget as HTMLElement;\n        const [first, last] = getTabbableEdges(container);\n        const hasTabbableElementsInside = first && last;\n\n        // we can only wrap focus if we have tabbable edges\n        if (!hasTabbableElementsInside) {\n          if (focusedElement === container) event.preventDefault();\n        } else {\n          if (!event.shiftKey && focusedElement === last) {\n            event.preventDefault();\n            if (loop) focus(first, { select: true });\n          } else if (event.shiftKey && focusedElement === first) {\n            event.preventDefault();\n            if (loop) focus(last, { select: true });\n          }\n        }\n      }\n    },\n    [loop, trapped, focusScope.paused]\n  );\n\n  return (\n    <Primitive.div tabIndex={-1} {...scopeProps} ref={composedRefs} onKeyDown={handleKeyDown} />\n  );\n});\n\nFocusScope.displayName = FOCUS_SCOPE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Attempts focusing the first element in a list of candidates.\n * Stops when focus has actually moved.\n */\nfunction focusFirst(candidates: HTMLElement[], { select = false } = {}) {\n  const previouslyFocusedElement = document.activeElement;\n  for (const candidate of candidates) {\n    focus(candidate, { select });\n    if (document.activeElement !== previouslyFocusedElement) return;\n  }\n}\n\n/**\n * Returns the first and last tabbable elements inside a container.\n */\nfunction getTabbableEdges(container: HTMLElement) {\n  const candidates = getTabbableCandidates(container);\n  const first = findVisible(candidates, container);\n  const last = findVisible(candidates.reverse(), container);\n  return [first, last] as const;\n}\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\n\n/**\n * Returns the first visible element in a list.\n * NOTE: Only checks visibility up to the `container`.\n */\nfunction findVisible(elements: HTMLElement[], container: HTMLElement) {\n  for (const element of elements) {\n    // we stop checking if it's hidden at the `container` level (excluding)\n    if (!isHidden(element, { upTo: container })) return element;\n  }\n}\n\nfunction isHidden(node: HTMLElement, { upTo }: { upTo?: HTMLElement }) {\n  if (getComputedStyle(node).visibility === 'hidden') return true;\n  while (node) {\n    // we stop at `upTo` (excluding it)\n    if (upTo !== undefined && node === upTo) return false;\n    if (getComputedStyle(node).display === 'none') return true;\n    node = node.parentElement as HTMLElement;\n  }\n  return false;\n}\n\nfunction isSelectableInput(element: any): element is FocusableTarget & { select: () => void } {\n  return element instanceof HTMLInputElement && 'select' in element;\n}\n\nfunction focus(element?: FocusableTarget | null, { select = false } = {}) {\n  // only focus if that element is focusable\n  if (element && element.focus) {\n    const previouslyFocusedElement = document.activeElement;\n    // NOTE: we prevent scrolling on focus, to minimize jarring transitions for users\n    element.focus({ preventScroll: true });\n    // only select if its not the same element, it supports selection and we need to select\n    if (element !== previouslyFocusedElement && isSelectableInput(element) && select)\n      element.select();\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope stack\n * -----------------------------------------------------------------------------------------------*/\n\ntype FocusScopeAPI = { paused: boolean; pause(): void; resume(): void };\nconst focusScopesStack = createFocusScopesStack();\n\nfunction createFocusScopesStack() {\n  /** A stack of focus scopes, with the active one at the top */\n  let stack: FocusScopeAPI[] = [];\n\n  return {\n    add(focusScope: FocusScopeAPI) {\n      // pause the currently active focus scope (at the top of the stack)\n      const activeFocusScope = stack[0];\n      if (focusScope !== activeFocusScope) {\n        activeFocusScope?.pause();\n      }\n      // remove in case it already exists (because we'll re-add it at the top of the stack)\n      stack = arrayRemove(stack, focusScope);\n      stack.unshift(focusScope);\n    },\n\n    remove(focusScope: FocusScopeAPI) {\n      stack = arrayRemove(stack, focusScope);\n      stack[0]?.resume();\n    },\n  };\n}\n\nfunction arrayRemove<T>(array: T[], item: T) {\n  const updatedArray = [...array];\n  const index = updatedArray.indexOf(item);\n  if (index !== -1) {\n    updatedArray.splice(index, 1);\n  }\n  return updatedArray;\n}\n\nfunction removeLinks(items: HTMLElement[]) {\n  return items.filter((item) => item.tagName !== 'A');\n}\n\nconst Root = FocusScope;\n\nexport {\n  FocusScope,\n  //\n  Root,\n};\nexport type { FocusScopeProps };\n", "export { useLayoutEffect } from './useLayoutEffect';\n", "import * as React from 'react';\n\n/**\n * On the server, React emits a warning when calling `useLayoutEffect`.\n * This is because neither `useLayoutEffect` nor `useEffect` run on the server.\n * We use this safe version which suppresses the warning by replacing it with a noop on the server.\n *\n * See: https://reactjs.org/docs/hooks-reference.html#uselayouteffect\n */\nconst useLayoutEffect = Boolean(globalThis?.document) ? React.useLayoutEffect : () => {};\n\nexport { useLayoutEffect };\n", "export { useId } from './id';\n", "import * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n// We `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\nconst useReactId = (React as any)['useId'.toString()] || (() => undefined);\nlet count = 0;\n\nfunction useId(deterministicId?: string): string {\n  const [id, setId] = React.useState<string | undefined>(useReactId());\n  // React versions older than 18 will have client-side ids only.\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\n\nexport { useId };\n", "export {\n  Arrow,\n  //\n  Root,\n} from './Arrow';\nexport type { ArrowProps } from './Arrow';\n", "import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Arrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Arrow';\n\ntype ArrowElement = React.ElementRef<typeof Primitive.svg>;\ntype PrimitiveSvgProps = Radix.ComponentPropsWithoutRef<typeof Primitive.svg>;\ninterface ArrowProps extends PrimitiveSvgProps {}\n\nconst Arrow = React.forwardRef<ArrowElement, ArrowProps>((props, forwardedRef) => {\n  const { children, width = 10, height = 5, ...arrowProps } = props;\n  return (\n    <Primitive.svg\n      {...arrowProps}\n      ref={forwardedRef}\n      width={width}\n      height={height}\n      viewBox=\"0 0 30 10\"\n      preserveAspectRatio=\"none\"\n    >\n      {/* We use their children if they're slotting to replace the whole svg */}\n      {props.asChild ? children : <polygon points=\"0,0 30,0 15,10\" />}\n    </Primitive.svg>\n  );\n});\n\nArrow.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Arrow;\n\nexport {\n  Arrow,\n  //\n  Root,\n};\nexport type { ArrowProps };\n", "export { useSize } from './useSize';\n", "/// <reference types=\"resize-observer-browser\" />\n\nimport * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\nfunction useSize(element: HTMLElement | null) {\n  const [size, setSize] = React.useState<{ width: number; height: number } | undefined>(undefined);\n\n  useLayoutEffect(() => {\n    if (element) {\n      // provide size as early as possible\n      setSize({ width: element.offsetWidth, height: element.offsetHeight });\n\n      const resizeObserver = new ResizeObserver((entries) => {\n        if (!Array.isArray(entries)) {\n          return;\n        }\n\n        // Since we only observe the one element, we don't need to loop over the\n        // array\n        if (!entries.length) {\n          return;\n        }\n\n        const entry = entries[0];\n        let width: number;\n        let height: number;\n\n        if ('borderBoxSize' in entry) {\n          const borderSizeEntry = entry['borderBoxSize'];\n          // iron out differences between browsers\n          const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;\n          width = borderSize['inlineSize'];\n          height = borderSize['blockSize'];\n        } else {\n          // for browsers that don't support `borderBoxSize`\n          // we calculate it ourselves to get the correct border box.\n          width = element.offsetWidth;\n          height = element.offsetHeight;\n        }\n\n        setSize({ width, height });\n      });\n\n      resizeObserver.observe(element, { box: 'border-box' });\n\n      return () => resizeObserver.unobserve(element);\n    } else {\n      // We only want to reset to `undefined` when the element becomes `null`,\n      // not if it changes to another element.\n      setSize(undefined);\n    }\n  }, [element]);\n\n  return size;\n}\n\nexport { useSize };\n", "export {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n  //\n  SIDE_OPTIONS,\n  ALIGN_OPTIONS,\n} from './Popper';\nexport type {\n  PopperProps,\n  PopperAnchorProps,\n  PopperContentProps,\n  PopperArrowProps,\n} from './Popper';\n", "import * as React from 'react';\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  shift,\n  limitShift,\n  hide,\n  arrow as floatingUIarrow,\n  flip,\n  size,\n} from '@floating-ui/react-dom';\nimport * as ArrowPrimitive from '@radix-ui/react-arrow';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useSize } from '@radix-ui/react-use-size';\n\nimport type { Placement, Middleware } from '@floating-ui/react-dom';\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\nimport type { Measurable } from '@radix-ui/rect';\n\nconst SIDE_OPTIONS = ['top', 'right', 'bottom', 'left'] as const;\nconst ALIGN_OPTIONS = ['start', 'center', 'end'] as const;\n\ntype Side = typeof SIDE_OPTIONS[number];\ntype Align = typeof ALIGN_OPTIONS[number];\n\n/* -------------------------------------------------------------------------------------------------\n * Popper\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_NAME = 'Popper';\n\ntype ScopedProps<P> = P & { __scopePopper?: Scope };\nconst [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\n\ntype PopperContextValue = {\n  anchor: Measurable | null;\n  onAnchorChange(anchor: Measurable | null): void;\n};\nconst [PopperProvider, usePopperContext] = createPopperContext<PopperContextValue>(POPPER_NAME);\n\ninterface PopperProps {\n  children?: React.ReactNode;\n}\nconst Popper: React.FC<PopperProps> = (props: ScopedProps<PopperProps>) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState<Measurable | null>(null);\n  return (\n    <PopperProvider scope={__scopePopper} anchor={anchor} onAnchorChange={setAnchor}>\n      {children}\n    </PopperProvider>\n  );\n};\n\nPopper.displayName = POPPER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopperAnchor';\n\ntype PopperAnchorElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PopperAnchorProps extends PrimitiveDivProps {\n  virtualRef?: React.RefObject<Measurable>;\n}\n\nconst PopperAnchor = React.forwardRef<PopperAnchorElement, PopperAnchorProps>(\n  (props: ScopedProps<PopperAnchorProps>, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef<PopperAnchorElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    React.useEffect(() => {\n      // Consumer can anchor the popper to something that isn't\n      // a DOM node e.g. pointer position, so we override the\n      // `anchorRef` with their virtual ref in this case.\n      context.onAnchorChange(virtualRef?.current || ref.current);\n    });\n\n    return virtualRef ? null : <Primitive.div {...anchorProps} ref={composedRefs} />;\n  }\n);\n\nPopperAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopperContent';\n\ntype PopperContentContextValue = {\n  placedSide: Side;\n  onArrowChange(arrow: HTMLSpanElement | null): void;\n  arrowX?: number;\n  arrowY?: number;\n  shouldHideArrow: boolean;\n};\n\nconst [PopperContentProvider, useContentContext] =\n  createPopperContext<PopperContentContextValue>(CONTENT_NAME);\n\ntype Boundary = Element | null;\n\ntype PopperContentElement = React.ElementRef<typeof Primitive.div>;\ninterface PopperContentProps extends PrimitiveDivProps {\n  side?: Side;\n  sideOffset?: number;\n  align?: Align;\n  alignOffset?: number;\n  arrowPadding?: number;\n  avoidCollisions?: boolean;\n  collisionBoundary?: Boundary | Boundary[];\n  collisionPadding?: number | Partial<Record<Side, number>>;\n  sticky?: 'partial' | 'always';\n  hideWhenDetached?: boolean;\n  updatePositionStrategy?: 'optimized' | 'always';\n  onPlaced?: () => void;\n}\n\nconst PopperContent = React.forwardRef<PopperContentElement, PopperContentProps>(\n  (props: ScopedProps<PopperContentProps>, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = 'bottom',\n      sideOffset = 0,\n      align = 'center',\n      alignOffset = 0,\n      arrowPadding = 0,\n      avoidCollisions = true,\n      collisionBoundary = [],\n      collisionPadding: collisionPaddingProp = 0,\n      sticky = 'partial',\n      hideWhenDetached = false,\n      updatePositionStrategy = 'optimized',\n      onPlaced,\n      ...contentProps\n    } = props;\n\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n\n    const [arrow, setArrow] = React.useState<HTMLSpanElement | null>(null);\n    const arrowSize = useSize(arrow);\n    const arrowWidth = arrowSize?.width ?? 0;\n    const arrowHeight = arrowSize?.height ?? 0;\n\n    const desiredPlacement = (side + (align !== 'center' ? '-' + align : '')) as Placement;\n\n    const collisionPadding =\n      typeof collisionPaddingProp === 'number'\n        ? collisionPaddingProp\n        : { top: 0, right: 0, bottom: 0, left: 0, ...collisionPaddingProp };\n\n    const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [collisionBoundary];\n    const hasExplicitBoundaries = boundary.length > 0;\n\n    const detectOverflowOptions = {\n      padding: collisionPadding,\n      boundary: boundary.filter(isNotNull),\n      // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n      altBoundary: hasExplicitBoundaries,\n    };\n\n    const { refs, floatingStyles, placement, isPositioned, middlewareData } = useFloating({\n      // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues\n      strategy: 'fixed',\n      placement: desiredPlacement,\n      whileElementsMounted: (...args) => {\n        const cleanup = autoUpdate(...args, {\n          animationFrame: updatePositionStrategy === 'always',\n        });\n        return cleanup;\n      },\n      elements: {\n        reference: context.anchor,\n      },\n      middleware: [\n        offset({ mainAxis: sideOffset + arrowHeight, alignmentAxis: alignOffset }),\n        avoidCollisions &&\n          shift({\n            mainAxis: true,\n            crossAxis: false,\n            limiter: sticky === 'partial' ? limitShift() : undefined,\n            ...detectOverflowOptions,\n          }),\n        avoidCollisions && flip({ ...detectOverflowOptions }),\n        size({\n          ...detectOverflowOptions,\n          apply: ({ elements, rects, availableWidth, availableHeight }) => {\n            const { width: anchorWidth, height: anchorHeight } = rects.reference;\n            const contentStyle = elements.floating.style;\n            contentStyle.setProperty('--radix-popper-available-width', `${availableWidth}px`);\n            contentStyle.setProperty('--radix-popper-available-height', `${availableHeight}px`);\n            contentStyle.setProperty('--radix-popper-anchor-width', `${anchorWidth}px`);\n            contentStyle.setProperty('--radix-popper-anchor-height', `${anchorHeight}px`);\n          },\n        }),\n        arrow && floatingUIarrow({ element: arrow, padding: arrowPadding }),\n        transformOrigin({ arrowWidth, arrowHeight }),\n        hideWhenDetached && hide({ strategy: 'referenceHidden', ...detectOverflowOptions }),\n      ],\n    });\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n\n    const handlePlaced = useCallbackRef(onPlaced);\n    useLayoutEffect(() => {\n      if (isPositioned) {\n        handlePlaced?.();\n      }\n    }, [isPositioned, handlePlaced]);\n\n    const arrowX = middlewareData.arrow?.x;\n    const arrowY = middlewareData.arrow?.y;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n\n    const [contentZIndex, setContentZIndex] = React.useState<string>();\n    useLayoutEffect(() => {\n      if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n    }, [content]);\n\n    return (\n      <div\n        ref={refs.setFloating}\n        data-radix-popper-content-wrapper=\"\"\n        style={{\n          ...floatingStyles,\n          transform: isPositioned ? floatingStyles.transform : 'translate(0, -200%)', // keep off the page when measuring\n          minWidth: 'max-content',\n          zIndex: contentZIndex,\n          ['--radix-popper-transform-origin' as any]: [\n            middlewareData.transformOrigin?.x,\n            middlewareData.transformOrigin?.y,\n          ].join(' '),\n        }}\n        // Floating UI interally calculates logical alignment based the `dir` attribute on\n        // the reference/floating node, we must add this attribute here to ensure\n        // this is calculated when portalled as well as inline.\n        dir={props.dir}\n      >\n        <PopperContentProvider\n          scope={__scopePopper}\n          placedSide={placedSide}\n          onArrowChange={setArrow}\n          arrowX={arrowX}\n          arrowY={arrowY}\n          shouldHideArrow={cannotCenterArrow}\n        >\n          <Primitive.div\n            data-side={placedSide}\n            data-align={placedAlign}\n            {...contentProps}\n            ref={composedRefs}\n            style={{\n              ...contentProps.style,\n              // if the PopperContent hasn't been placed yet (not all measurements done)\n              // we prevent animations so that users's animation don't kick in too early referring wrong sides\n              animation: !isPositioned ? 'none' : undefined,\n              // hide the content if using the hide middleware and should be hidden\n              opacity: middlewareData.hide?.referenceHidden ? 0 : undefined,\n            }}\n          />\n        </PopperContentProvider>\n      </div>\n    );\n  }\n);\n\nPopperContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopperArrow';\n\nconst OPPOSITE_SIDE: Record<Side, Side> = {\n  top: 'bottom',\n  right: 'left',\n  bottom: 'top',\n  left: 'right',\n};\n\ntype PopperArrowElement = React.ElementRef<typeof ArrowPrimitive.Root>;\ntype ArrowProps = Radix.ComponentPropsWithoutRef<typeof ArrowPrimitive.Root>;\ninterface PopperArrowProps extends ArrowProps {}\n\nconst PopperArrow = React.forwardRef<PopperArrowElement, PopperArrowProps>(function PopperArrow(\n  props: ScopedProps<PopperArrowProps>,\n  forwardedRef\n) {\n  const { __scopePopper, ...arrowProps } = props;\n  const contentContext = useContentContext(ARROW_NAME, __scopePopper);\n  const baseSide = OPPOSITE_SIDE[contentContext.placedSide];\n\n  return (\n    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n    // doesn't report size as we'd expect on SVG elements.\n    // it reports their bounding box which is effectively the largest path inside the SVG.\n    <span\n      ref={contentContext.onArrowChange}\n      style={{\n        position: 'absolute',\n        left: contentContext.arrowX,\n        top: contentContext.arrowY,\n        [baseSide]: 0,\n        transformOrigin: {\n          top: '',\n          right: '0 0',\n          bottom: 'center 0',\n          left: '100% 0',\n        }[contentContext.placedSide],\n        transform: {\n          top: 'translateY(100%)',\n          right: 'translateY(50%) rotate(90deg) translateX(-50%)',\n          bottom: `rotate(180deg)`,\n          left: 'translateY(50%) rotate(-90deg) translateX(50%)',\n        }[contentContext.placedSide],\n        visibility: contentContext.shouldHideArrow ? 'hidden' : undefined,\n      }}\n    >\n      <ArrowPrimitive.Root\n        {...arrowProps}\n        ref={forwardedRef}\n        style={{\n          ...arrowProps.style,\n          // ensures the element can be measured correctly (mostly for if SVG)\n          display: 'block',\n        }}\n      />\n    </span>\n  );\n});\n\nPopperArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction isNotNull<T>(value: T | null): value is T {\n  return value !== null;\n}\n\nconst transformOrigin = (options: { arrowWidth: number; arrowHeight: number }): Middleware => ({\n  name: 'transformOrigin',\n  options,\n  fn(data) {\n    const { placement, rects, middlewareData } = data;\n\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const isArrowHidden = cannotCenterArrow;\n    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;\n    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const noArrowAlign = { start: '0%', center: '50%', end: '100%' }[placedAlign];\n\n    const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2;\n    const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2;\n\n    let x = '';\n    let y = '';\n\n    if (placedSide === 'bottom') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${-arrowHeight}px`;\n    } else if (placedSide === 'top') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${rects.floating.height + arrowHeight}px`;\n    } else if (placedSide === 'right') {\n      x = `${-arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    } else if (placedSide === 'left') {\n      x = `${rects.floating.width + arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    }\n    return { data: { x, y } };\n  },\n});\n\nfunction getSideAndAlignFromPlacement(placement: Placement) {\n  const [side, align = 'center'] = placement.split('-');\n  return [side as Side, align as Align] as const;\n}\n\nconst Root = Popper;\nconst Anchor = PopperAnchor;\nconst Content = PopperContent;\nconst Arrow = PopperArrow;\n\nexport {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n  //\n  SIDE_OPTIONS,\n  ALIGN_OPTIONS,\n};\nexport type { PopperProps, PopperAnchorProps, PopperContentProps, PopperArrowProps };\n", "export {\n  Portal,\n  //\n  Root,\n} from './Portal';\nexport type { PortalProps } from './Portal';\n", "import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Portal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'Portal';\n\ntype PortalElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PortalProps extends PrimitiveDivProps {\n  /**\n   * An optional container where the portaled content should be appended.\n   */\n  container?: HTMLElement | null;\n}\n\nconst Portal = React.forwardRef<PortalElement, PortalProps>((props, forwardedRef) => {\n  const { container = globalThis?.document?.body, ...portalProps } = props;\n  return container\n    ? ReactDOM.createPortal(<Primitive.div {...portalProps} ref={forwardedRef} />, container)\n    : null;\n});\n\nPortal.displayName = PORTAL_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Portal;\n\nexport {\n  Portal,\n  //\n  Root,\n};\nexport type { PortalProps };\n", "export { useControllableState } from './useControllableState';\n", "import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\ntype UseControllableStateParams<T> = {\n  prop?: T | undefined;\n  defaultProp?: T | undefined;\n  onChange?: (state: T) => void;\n};\n\ntype SetStateFn<T> = (prevState?: T) => T;\n\nfunction useControllableState<T>({\n  prop,\n  defaultProp,\n  onChange = () => {},\n}: UseControllableStateParams<T>) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });\n  const isControlled = prop !== undefined;\n  const value = isControlled ? prop : uncontrolledProp;\n  const handleChange = useCallbackRef(onChange);\n\n  const setValue: React.Dispatch<React.SetStateAction<T | undefined>> = React.useCallback(\n    (nextValue) => {\n      if (isControlled) {\n        const setter = nextValue as SetStateFn<T>;\n        const value = typeof nextValue === 'function' ? setter(prop) : nextValue;\n        if (value !== prop) handleChange(value as T);\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    },\n    [isControlled, prop, setUncontrolledProp, handleChange]\n  );\n\n  return [value, setValue] as const;\n}\n\nfunction useUncontrolledState<T>({\n  defaultProp,\n  onChange,\n}: Omit<UseControllableStateParams<T>, 'prop'>) {\n  const uncontrolledState = React.useState<T | undefined>(defaultProp);\n  const [value] = uncontrolledState;\n  const prevValueRef = React.useRef(value);\n  const handleChange = useCallbackRef(onChange);\n\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      handleChange(value as T);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n\n  return uncontrolledState;\n}\n\nexport { useControllableState };\n", "export { usePrevious } from './usePrevious';\n", "import * as React from 'react';\n\nfunction usePrevious<T>(value: T) {\n  const ref = React.useRef({ value, previous: value });\n\n  // We compare values before making an update to ensure that\n  // a change has been made. This ensures the previous value is\n  // persisted correctly between renders.\n  return React.useMemo(() => {\n    if (ref.current.value !== value) {\n      ref.current.previous = ref.current.value;\n      ref.current.value = value;\n    }\n    return ref.current.previous;\n  }, [value]);\n}\n\nexport { usePrevious };\n", "export {\n  VisuallyHidden,\n  //\n  Root,\n} from './VisuallyHidden';\nexport type { VisuallyHiddenProps } from './VisuallyHidden';\n", "import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * VisuallyHidden\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'VisuallyHidden';\n\ntype VisuallyHiddenElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface VisuallyHiddenProps extends PrimitiveSpanProps {}\n\nconst VisuallyHidden = React.forwardRef<VisuallyHiddenElement, VisuallyHiddenProps>(\n  (props, forwardedRef) => {\n    return (\n      <Primitive.span\n        {...props}\n        ref={forwardedRef}\n        style={{\n          // See: https://github.com/twbs/bootstrap/blob/master/scss/mixins/_screen-reader.scss\n          position: 'absolute',\n          border: 0,\n          width: 1,\n          height: 1,\n          padding: 0,\n          margin: -1,\n          overflow: 'hidden',\n          clip: 'rect(0, 0, 0, 0)',\n          whiteSpace: 'nowrap',\n          wordWrap: 'normal',\n          ...props.style,\n        }}\n      />\n    );\n  }\n);\n\nVisuallyHidden.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = VisuallyHidden;\n\nexport {\n  VisuallyHidden,\n  //\n  Root,\n};\nexport type { VisuallyHiddenProps };\n", "import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { RemoveScroll } from './UI';\nimport SideCar from './sidecar';\nvar ReactRemoveScroll = React.forwardRef(function (props, ref) { return (React.createElement(RemoveScroll, __assign({}, props, { ref: ref, sideCar: SideCar }))); });\nReactRemoveScroll.classNames = RemoveScroll.classNames;\nexport default ReactRemoveScroll;\n", "import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { fullWidthClassName, zeroRightClassName } from 'react-remove-scroll-bar/constants';\nimport { useMergeRefs } from 'use-callback-ref';\nimport { effectCar } from './medium';\nvar nothing = function () {\n    return;\n};\n/**\n * Removes scrollbar from the page and contain the scroll within the Lock\n */\nvar RemoveScroll = React.forwardRef(function (props, parentRef) {\n    var ref = React.useRef(null);\n    var _a = React.useState({\n        onScrollCapture: nothing,\n        onWheelCapture: nothing,\n        onTouchMoveCapture: nothing,\n    }), callbacks = _a[0], setCallbacks = _a[1];\n    var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container = _b === void 0 ? 'div' : _b, rest = __rest(props, [\"forwardProps\", \"children\", \"className\", \"removeScrollBar\", \"enabled\", \"shards\", \"sideCar\", \"noIsolation\", \"inert\", \"allowPinchZoom\", \"as\"]);\n    var SideCar = sideCar;\n    var containerRef = useMergeRefs([ref, parentRef]);\n    var containerProps = __assign(__assign({}, rest), callbacks);\n    return (React.createElement(React.Fragment, null,\n        enabled && (React.createElement(SideCar, { sideCar: effectCar, removeScrollBar: removeScrollBar, shards: shards, noIsolation: noIsolation, inert: inert, setCallbacks: setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref })),\n        forwardProps ? (React.cloneElement(React.Children.only(children), __assign(__assign({}, containerProps), { ref: containerRef }))) : (React.createElement(Container, __assign({}, containerProps, { className: className, ref: containerRef }), children))));\n});\nRemoveScroll.defaultProps = {\n    enabled: true,\n    removeScrollBar: true,\n    inert: false,\n};\nRemoveScroll.classNames = {\n    fullWidth: fullWidthClassName,\n    zeroRight: zeroRightClassName,\n};\nexport { RemoveScroll };\n", "import { createSidecarMedium } from 'use-sidecar';\nexport var effectCar = createSidecarMedium();\n", "import { __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\nimport { styleSingleton } from 'react-style-singleton';\nimport { nonPassive } from './aggresiveCapture';\nimport { handleScroll, locationCouldBeScrolled } from './handleScroll';\nexport var getTouchXY = function (event) {\n    return 'changedTouches' in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];\n};\nexport var getDeltaXY = function (event) { return [event.deltaX, event.deltaY]; };\nvar extractRef = function (ref) {\n    return ref && 'current' in ref ? ref.current : ref;\n};\nvar deltaCompare = function (x, y) { return x[0] === y[0] && x[1] === y[1]; };\nvar generateStyle = function (id) { return \"\\n  .block-interactivity-\".concat(id, \" {pointer-events: none;}\\n  .allow-interactivity-\").concat(id, \" {pointer-events: all;}\\n\"); };\nvar idCounter = 0;\nvar lockStack = [];\nexport function RemoveScrollSideCar(props) {\n    var shouldPreventQueue = React.useRef([]);\n    var touchStartRef = React.useRef([0, 0]);\n    var activeAxis = React.useRef();\n    var id = React.useState(idCounter++)[0];\n    var Style = React.useState(function () { return styleSingleton(); })[0];\n    var lastProps = React.useRef(props);\n    React.useEffect(function () {\n        lastProps.current = props;\n    }, [props]);\n    React.useEffect(function () {\n        if (props.inert) {\n            document.body.classList.add(\"block-interactivity-\".concat(id));\n            var allow_1 = __spreadArray([props.lockRef.current], (props.shards || []).map(extractRef), true).filter(Boolean);\n            allow_1.forEach(function (el) { return el.classList.add(\"allow-interactivity-\".concat(id)); });\n            return function () {\n                document.body.classList.remove(\"block-interactivity-\".concat(id));\n                allow_1.forEach(function (el) { return el.classList.remove(\"allow-interactivity-\".concat(id)); });\n            };\n        }\n        return;\n    }, [props.inert, props.lockRef.current, props.shards]);\n    var shouldCancelEvent = React.useCallback(function (event, parent) {\n        if ('touches' in event && event.touches.length === 2) {\n            return !lastProps.current.allowPinchZoom;\n        }\n        var touch = getTouchXY(event);\n        var touchStart = touchStartRef.current;\n        var deltaX = 'deltaX' in event ? event.deltaX : touchStart[0] - touch[0];\n        var deltaY = 'deltaY' in event ? event.deltaY : touchStart[1] - touch[1];\n        var currentAxis;\n        var target = event.target;\n        var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? 'h' : 'v';\n        // allow horizontal touch move on Range inputs. They will not cause any scroll\n        if ('touches' in event && moveDirection === 'h' && target.type === 'range') {\n            return false;\n        }\n        var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n        if (!canBeScrolledInMainDirection) {\n            return true;\n        }\n        if (canBeScrolledInMainDirection) {\n            currentAxis = moveDirection;\n        }\n        else {\n            currentAxis = moveDirection === 'v' ? 'h' : 'v';\n            canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n            // other axis might be not scrollable\n        }\n        if (!canBeScrolledInMainDirection) {\n            return false;\n        }\n        if (!activeAxis.current && 'changedTouches' in event && (deltaX || deltaY)) {\n            activeAxis.current = currentAxis;\n        }\n        if (!currentAxis) {\n            return true;\n        }\n        var cancelingAxis = activeAxis.current || currentAxis;\n        return handleScroll(cancelingAxis, parent, event, cancelingAxis === 'h' ? deltaX : deltaY, true);\n    }, []);\n    var shouldPrevent = React.useCallback(function (_event) {\n        var event = _event;\n        if (!lockStack.length || lockStack[lockStack.length - 1] !== Style) {\n            // not the last active\n            return;\n        }\n        var delta = 'deltaY' in event ? getDeltaXY(event) : getTouchXY(event);\n        var sourceEvent = shouldPreventQueue.current.filter(function (e) { return e.name === event.type && e.target === event.target && deltaCompare(e.delta, delta); })[0];\n        // self event, and should be canceled\n        if (sourceEvent && sourceEvent.should) {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n            return;\n        }\n        // outside or shard event\n        if (!sourceEvent) {\n            var shardNodes = (lastProps.current.shards || [])\n                .map(extractRef)\n                .filter(Boolean)\n                .filter(function (node) { return node.contains(event.target); });\n            var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;\n            if (shouldStop) {\n                if (event.cancelable) {\n                    event.preventDefault();\n                }\n            }\n        }\n    }, []);\n    var shouldCancel = React.useCallback(function (name, delta, target, should) {\n        var event = { name: name, delta: delta, target: target, should: should };\n        shouldPreventQueue.current.push(event);\n        setTimeout(function () {\n            shouldPreventQueue.current = shouldPreventQueue.current.filter(function (e) { return e !== event; });\n        }, 1);\n    }, []);\n    var scrollTouchStart = React.useCallback(function (event) {\n        touchStartRef.current = getTouchXY(event);\n        activeAxis.current = undefined;\n    }, []);\n    var scrollWheel = React.useCallback(function (event) {\n        shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n    }, []);\n    var scrollTouchMove = React.useCallback(function (event) {\n        shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n    }, []);\n    React.useEffect(function () {\n        lockStack.push(Style);\n        props.setCallbacks({\n            onScrollCapture: scrollWheel,\n            onWheelCapture: scrollWheel,\n            onTouchMoveCapture: scrollTouchMove,\n        });\n        document.addEventListener('wheel', shouldPrevent, nonPassive);\n        document.addEventListener('touchmove', shouldPrevent, nonPassive);\n        document.addEventListener('touchstart', scrollTouchStart, nonPassive);\n        return function () {\n            lockStack = lockStack.filter(function (inst) { return inst !== Style; });\n            document.removeEventListener('wheel', shouldPrevent, nonPassive);\n            document.removeEventListener('touchmove', shouldPrevent, nonPassive);\n            document.removeEventListener('touchstart', scrollTouchStart, nonPassive);\n        };\n    }, []);\n    var removeScrollBar = props.removeScrollBar, inert = props.inert;\n    return (React.createElement(React.Fragment, null,\n        inert ? React.createElement(Style, { styles: generateStyle(id) }) : null,\n        removeScrollBar ? React.createElement(RemoveScrollBar, { gapMode: \"margin\" }) : null));\n}\n", "var passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n                return true;\n            },\n        });\n        // @ts-ignore\n        window.addEventListener('test', options, options);\n        // @ts-ignore\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\nexport var nonPassive = passiveSupported ? { passive: false } : false;\n", "var alwaysContainsScroll = function (node) {\n    // textarea will always _contain_ scroll inside self. It only can be hidden\n    return node.tagName === 'TEXTAREA';\n};\nvar elementCanBeScrolled = function (node, overflow) {\n    var styles = window.getComputedStyle(node);\n    return (\n    // not-not-scrollable\n    styles[overflow] !== 'hidden' &&\n        // contains scroll inside self\n        !(styles.overflowY === styles.overflowX && !alwaysContainsScroll(node) && styles[overflow] === 'visible'));\n};\nvar elementCouldBeVScrolled = function (node) { return elementCanBeScrolled(node, 'overflowY'); };\nvar elementCouldBeHScrolled = function (node) { return elementCanBeScrolled(node, 'overflowX'); };\nexport var locationCouldBeScrolled = function (axis, node) {\n    var current = node;\n    do {\n        // Skip over shadow root\n        if (typeof ShadowRoot !== 'undefined' && current instanceof ShadowRoot) {\n            current = current.host;\n        }\n        var isScrollable = elementCouldBeScrolled(axis, current);\n        if (isScrollable) {\n            var _a = getScrollVariables(axis, current), s = _a[1], d = _a[2];\n            if (s > d) {\n                return true;\n            }\n        }\n        current = current.parentNode;\n    } while (current && current !== document.body);\n    return false;\n};\nvar getVScrollVariables = function (_a) {\n    var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;\n    return [\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n    ];\n};\nvar getHScrollVariables = function (_a) {\n    var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;\n    return [\n        scrollLeft,\n        scrollWidth,\n        clientWidth,\n    ];\n};\nvar elementCouldBeScrolled = function (axis, node) {\n    return axis === 'v' ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);\n};\nvar getScrollVariables = function (axis, node) {\n    return axis === 'v' ? getVScrollVariables(node) : getHScrollVariables(node);\n};\nvar getDirectionFactor = function (axis, direction) {\n    /**\n     * If the element's direction is rtl (right-to-left), then scrollLeft is 0 when the scrollbar is at its rightmost position,\n     * and then increasingly negative as you scroll towards the end of the content.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n     */\n    return axis === 'h' && direction === 'rtl' ? -1 : 1;\n};\nexport var handleScroll = function (axis, endTarget, event, sourceDelta, noOverscroll) {\n    var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);\n    var delta = directionFactor * sourceDelta;\n    // find scrollable target\n    var target = event.target;\n    var targetInLock = endTarget.contains(target);\n    var shouldCancelScroll = false;\n    var isDeltaPositive = delta > 0;\n    var availableScroll = 0;\n    var availableScrollTop = 0;\n    do {\n        var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2];\n        var elementScroll = scroll_1 - capacity - directionFactor * position;\n        if (position || elementScroll) {\n            if (elementCouldBeScrolled(axis, target)) {\n                availableScroll += elementScroll;\n                availableScrollTop += position;\n            }\n        }\n        target = target.parentNode;\n    } while (\n    // portaled content\n    (!targetInLock && target !== document.body) ||\n        // self content\n        (targetInLock && (endTarget.contains(target) || endTarget === target)));\n    if (isDeltaPositive && ((noOverscroll && availableScroll === 0) || (!noOverscroll && delta > availableScroll))) {\n        shouldCancelScroll = true;\n    }\n    else if (!isDeltaPositive &&\n        ((noOverscroll && availableScrollTop === 0) || (!noOverscroll && -delta > availableScrollTop))) {\n        shouldCancelScroll = true;\n    }\n    return shouldCancelScroll;\n};\n", "import { exportSidecar } from 'use-sidecar';\nimport { RemoveScrollSideCar } from './SideEffect';\nimport { effectCar } from './medium';\nexport default exportSidecar(effectCar, RemoveScrollSideCar);\n", "export {\n  createSelectScope,\n  //\n  Select,\n  SelectTrigger,\n  SelectValue,\n  SelectIcon,\n  SelectPortal,\n  SelectContent,\n  SelectViewport,\n  SelectGroup,\n  SelectLabel,\n  SelectItem,\n  SelectItemText,\n  SelectItemIndicator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n  SelectSeparator,\n  SelectArrow,\n  //\n  Root,\n  Trigger,\n  Value,\n  Icon,\n  Portal,\n  Content,\n  Viewport,\n  Group,\n  Label,\n  Item,\n  ItemText,\n  ItemIndicator,\n  ScrollUpButton,\n  ScrollDownButton,\n  Separator,\n  Arrow,\n} from './Select';\nexport type {\n  SelectProps,\n  SelectTriggerProps,\n  SelectValueProps,\n  SelectIconProps,\n  SelectPortalProps,\n  SelectContentProps,\n  SelectViewportProps,\n  SelectGroupProps,\n  SelectLabelProps,\n  SelectItemProps,\n  SelectItemTextProps,\n  SelectItemIndicatorProps,\n  SelectScrollUpButtonProps,\n  SelectScrollDownButtonProps,\n  SelectSeparatorProps,\n  SelectArrowProps,\n} from './Select';\n", "import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { clamp } from '@radix-ui/number';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Slot } from '@radix-ui/react-slot';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { VisuallyHidden } from '@radix-ui/react-visually-hidden';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\nconst OPEN_KEYS = [' ', 'Enter', 'ArrowUp', 'ArrowDown'];\nconst SELECTION_KEYS = [' ', 'Enter'];\n\n/* -------------------------------------------------------------------------------------------------\n * Select\n * -----------------------------------------------------------------------------------------------*/\n\nconst SELECT_NAME = 'Select';\n\ntype ItemData = { value: string; disabled: boolean; textValue: string };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  SelectItemElement,\n  ItemData\n>(SELECT_NAME);\n\ntype ScopedProps<P> = P & { __scopeSelect?: Scope };\nconst [createSelectContext, createSelectScope] = createContextScope(SELECT_NAME, [\n  createCollectionScope,\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\ntype SelectContextValue = {\n  trigger: SelectTriggerElement | null;\n  onTriggerChange(node: SelectTriggerElement | null): void;\n  valueNode: SelectValueElement | null;\n  onValueNodeChange(node: SelectValueElement): void;\n  valueNodeHasChildren: boolean;\n  onValueNodeHasChildrenChange(hasChildren: boolean): void;\n  contentId: string;\n  value?: string;\n  onValueChange(value: string): void;\n  open: boolean;\n  required?: boolean;\n  onOpenChange(open: boolean): void;\n  dir: SelectProps['dir'];\n  triggerPointerDownPosRef: React.MutableRefObject<{ x: number; y: number } | null>;\n  disabled?: boolean;\n};\n\nconst [SelectProvider, useSelectContext] = createSelectContext<SelectContextValue>(SELECT_NAME);\n\ntype NativeOption = React.ReactElement<React.ComponentProps<'option'>>;\n\ntype SelectNativeOptionsContextValue = {\n  onNativeOptionAdd(option: NativeOption): void;\n  onNativeOptionRemove(option: NativeOption): void;\n};\nconst [SelectNativeOptionsProvider, useSelectNativeOptionsContext] =\n  createSelectContext<SelectNativeOptionsContextValue>(SELECT_NAME);\n\ninterface SelectProps {\n  children?: React.ReactNode;\n  value?: string;\n  defaultValue?: string;\n  onValueChange?(value: string): void;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  dir?: Direction;\n  name?: string;\n  autoComplete?: string;\n  disabled?: boolean;\n  required?: boolean;\n}\n\nconst Select: React.FC<SelectProps> = (props: ScopedProps<SelectProps>) => {\n  const {\n    __scopeSelect,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    value: valueProp,\n    defaultValue,\n    onValueChange,\n    dir,\n    name,\n    autoComplete,\n    disabled,\n    required,\n  } = props;\n  const popperScope = usePopperScope(__scopeSelect);\n  const [trigger, setTrigger] = React.useState<SelectTriggerElement | null>(null);\n  const [valueNode, setValueNode] = React.useState<SelectValueElement | null>(null);\n  const [valueNodeHasChildren, setValueNodeHasChildren] = React.useState(false);\n  const direction = useDirection(dir);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n  const [value, setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue,\n    onChange: onValueChange,\n  });\n  const triggerPointerDownPosRef = React.useRef<{ x: number; y: number } | null>(null);\n\n  // We set this to true by default so that events bubble to forms without JS (SSR)\n  const isFormControl = trigger ? Boolean(trigger.closest('form')) : true;\n  const [nativeOptionsSet, setNativeOptionsSet] = React.useState(new Set<NativeOption>());\n\n  // The native `select` only associates the correct default value if the corresponding\n  // `option` is rendered as a child **at the same time** as itself.\n  // Because it might take a few renders for our items to gather the information to build\n  // the native `option`(s), we generate a key on the `select` to make sure React re-builds it\n  // each time the options change.\n  const nativeSelectKey = Array.from(nativeOptionsSet)\n    .map((option) => option.props.value)\n    .join(';');\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <SelectProvider\n        required={required}\n        scope={__scopeSelect}\n        trigger={trigger}\n        onTriggerChange={setTrigger}\n        valueNode={valueNode}\n        onValueNodeChange={setValueNode}\n        valueNodeHasChildren={valueNodeHasChildren}\n        onValueNodeHasChildrenChange={setValueNodeHasChildren}\n        contentId={useId()}\n        value={value}\n        onValueChange={setValue}\n        open={open}\n        onOpenChange={setOpen}\n        dir={direction}\n        triggerPointerDownPosRef={triggerPointerDownPosRef}\n        disabled={disabled}\n      >\n        <Collection.Provider scope={__scopeSelect}>\n          <SelectNativeOptionsProvider\n            scope={props.__scopeSelect}\n            onNativeOptionAdd={React.useCallback((option) => {\n              setNativeOptionsSet((prev) => new Set(prev).add(option));\n            }, [])}\n            onNativeOptionRemove={React.useCallback((option) => {\n              setNativeOptionsSet((prev) => {\n                const optionsSet = new Set(prev);\n                optionsSet.delete(option);\n                return optionsSet;\n              });\n            }, [])}\n          >\n            {children}\n          </SelectNativeOptionsProvider>\n        </Collection.Provider>\n\n        {isFormControl ? (\n          <BubbleSelect\n            key={nativeSelectKey}\n            aria-hidden\n            required={required}\n            tabIndex={-1}\n            name={name}\n            autoComplete={autoComplete}\n            value={value}\n            // enable form autofill\n            onChange={(event) => setValue(event.target.value)}\n            disabled={disabled}\n          >\n            {value === undefined ? <option value=\"\" /> : null}\n            {Array.from(nativeOptionsSet)}\n          </BubbleSelect>\n        ) : null}\n      </SelectProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nSelect.displayName = SELECT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'SelectTrigger';\n\ntype SelectTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface SelectTriggerProps extends PrimitiveButtonProps {}\n\nconst SelectTrigger = React.forwardRef<SelectTriggerElement, SelectTriggerProps>(\n  (props: ScopedProps<SelectTriggerProps>, forwardedRef) => {\n    const { __scopeSelect, disabled = false, ...triggerProps } = props;\n    const popperScope = usePopperScope(__scopeSelect);\n    const context = useSelectContext(TRIGGER_NAME, __scopeSelect);\n    const isDisabled = context.disabled || disabled;\n    const composedRefs = useComposedRefs(forwardedRef, context.onTriggerChange);\n    const getItems = useCollection(__scopeSelect);\n\n    const [searchRef, handleTypeaheadSearch, resetTypeahead] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.value === context.value);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem !== undefined) {\n        context.onValueChange(nextItem.value);\n      }\n    });\n\n    const handleOpen = () => {\n      if (!isDisabled) {\n        context.onOpenChange(true);\n        // reset typeahead when we open\n        resetTypeahead();\n      }\n    };\n\n    return (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        <Primitive.button\n          type=\"button\"\n          role=\"combobox\"\n          aria-controls={context.contentId}\n          aria-expanded={context.open}\n          aria-required={context.required}\n          aria-autocomplete=\"none\"\n          dir={context.dir}\n          data-state={context.open ? 'open' : 'closed'}\n          disabled={isDisabled}\n          data-disabled={isDisabled ? '' : undefined}\n          data-placeholder={shouldShowPlaceholder(context.value) ? '' : undefined}\n          {...triggerProps}\n          ref={composedRefs}\n          // Enable compatibility with native label or custom `Label` \"click\" for Safari:\n          onClick={composeEventHandlers(triggerProps.onClick, (event) => {\n            // Whilst browsers generally have no issue focusing the trigger when clicking\n            // on a label, Safari seems to struggle with the fact that there's no `onClick`.\n            // We force `focus` in this case. Note: this doesn't create any other side-effect\n            // because we are preventing default in `onPointerDown` so effectively\n            // this only runs for a label \"click\"\n            event.currentTarget.focus();\n          })}\n          onPointerDown={composeEventHandlers(triggerProps.onPointerDown, (event) => {\n            // prevent implicit pointer capture\n            // https://www.w3.org/TR/pointerevents3/#implicit-pointer-capture\n            const target = event.target as HTMLElement;\n            if (target.hasPointerCapture(event.pointerId)) {\n              target.releasePointerCapture(event.pointerId);\n            }\n\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (event.button === 0 && event.ctrlKey === false) {\n              handleOpen();\n              context.triggerPointerDownPosRef.current = {\n                x: Math.round(event.pageX),\n                y: Math.round(event.pageY),\n              };\n              // prevent trigger from stealing focus from the active item after opening.\n              event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(triggerProps.onKeyDown, (event) => {\n            const isTypingAhead = searchRef.current !== '';\n            const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n            if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n            if (isTypingAhead && event.key === ' ') return;\n            if (OPEN_KEYS.includes(event.key)) {\n              handleOpen();\n              event.preventDefault();\n            }\n          })}\n        />\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nSelectTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectValue\n * -----------------------------------------------------------------------------------------------*/\n\nconst VALUE_NAME = 'SelectValue';\n\ntype SelectValueElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface SelectValueProps extends Omit<PrimitiveSpanProps, 'placeholder'> {\n  placeholder?: React.ReactNode;\n}\n\nconst SelectValue = React.forwardRef<SelectValueElement, SelectValueProps>(\n  (props: ScopedProps<SelectValueProps>, forwardedRef) => {\n    // We ignore `className` and `style` as this part shouldn't be styled.\n    const { __scopeSelect, className, style, children, placeholder = '', ...valueProps } = props;\n    const context = useSelectContext(VALUE_NAME, __scopeSelect);\n    const { onValueNodeHasChildrenChange } = context;\n    const hasChildren = children !== undefined;\n    const composedRefs = useComposedRefs(forwardedRef, context.onValueNodeChange);\n\n    useLayoutEffect(() => {\n      onValueNodeHasChildrenChange(hasChildren);\n    }, [onValueNodeHasChildrenChange, hasChildren]);\n\n    return (\n      <Primitive.span\n        {...valueProps}\n        ref={composedRefs}\n        // we don't want events from the portalled `SelectValue` children to bubble\n        // through the item they came from\n        style={{ pointerEvents: 'none' }}\n      >\n        {shouldShowPlaceholder(context.value) ? <>{placeholder}</> : children}\n      </Primitive.span>\n    );\n  }\n);\n\nSelectValue.displayName = VALUE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectIcon\n * -----------------------------------------------------------------------------------------------*/\n\nconst ICON_NAME = 'SelectIcon';\n\ntype SelectIconElement = React.ElementRef<typeof Primitive.span>;\ninterface SelectIconProps extends PrimitiveSpanProps {}\n\nconst SelectIcon = React.forwardRef<SelectIconElement, SelectIconProps>(\n  (props: ScopedProps<SelectIconProps>, forwardedRef) => {\n    const { __scopeSelect, children, ...iconProps } = props;\n    return (\n      <Primitive.span aria-hidden {...iconProps} ref={forwardedRef}>\n        {children || '▼'}\n      </Primitive.span>\n    );\n  }\n);\n\nSelectIcon.displayName = ICON_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'SelectPortal';\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface SelectPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n}\n\nconst SelectPortal: React.FC<SelectPortalProps> = (props: ScopedProps<SelectPortalProps>) => {\n  return <PortalPrimitive asChild {...props} />;\n};\n\nSelectPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'SelectContent';\n\ntype SelectContentElement = SelectContentImplElement;\ninterface SelectContentProps extends SelectContentImplProps {}\n\nconst SelectContent = React.forwardRef<SelectContentElement, SelectContentProps>(\n  (props: ScopedProps<SelectContentProps>, forwardedRef) => {\n    const context = useSelectContext(CONTENT_NAME, props.__scopeSelect);\n    const [fragment, setFragment] = React.useState<DocumentFragment>();\n\n    // setting the fragment in `useLayoutEffect` as `DocumentFragment` doesn't exist on the server\n    useLayoutEffect(() => {\n      setFragment(new DocumentFragment());\n    }, []);\n\n    if (!context.open) {\n      const frag = fragment as Element | undefined;\n      return frag\n        ? ReactDOM.createPortal(\n            <SelectContentProvider scope={props.__scopeSelect}>\n              <Collection.Slot scope={props.__scopeSelect}>\n                <div>{props.children}</div>\n              </Collection.Slot>\n            </SelectContentProvider>,\n            frag\n          )\n        : null;\n    }\n\n    return <SelectContentImpl {...props} ref={forwardedRef} />;\n  }\n);\n\nSelectContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectContentImpl\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_MARGIN = 10;\n\ntype SelectContentContextValue = {\n  content?: SelectContentElement | null;\n  viewport?: SelectViewportElement | null;\n  onViewportChange?: (node: SelectViewportElement | null) => void;\n  itemRefCallback?: (node: SelectItemElement | null, value: string, disabled: boolean) => void;\n  selectedItem?: SelectItemElement | null;\n  onItemLeave?: () => void;\n  itemTextRefCallback?: (\n    node: SelectItemTextElement | null,\n    value: string,\n    disabled: boolean\n  ) => void;\n  focusSelectedItem?: () => void;\n  selectedItemText?: SelectItemTextElement | null;\n  position?: SelectContentProps['position'];\n  isPositioned?: boolean;\n  searchRef?: React.RefObject<string>;\n};\n\nconst [SelectContentProvider, useSelectContentContext] =\n  createSelectContext<SelectContentContextValue>(CONTENT_NAME);\n\nconst CONTENT_IMPL_NAME = 'SelectContentImpl';\n\ntype SelectContentImplElement = SelectPopperPositionElement | SelectItemAlignedPositionElement;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype FocusScopeProps = Radix.ComponentPropsWithoutRef<typeof FocusScope>;\n\ntype SelectPopperPrivateProps = { onPlaced?: PopperContentProps['onPlaced'] };\n\ninterface SelectContentImplProps\n  extends Omit<SelectPopperPositionProps, keyof SelectPopperPrivateProps>,\n    Omit<SelectItemAlignedPositionProps, keyof SelectPopperPrivateProps> {\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: DismissableLayerProps['onPointerDownOutside'];\n\n  position?: 'item-aligned' | 'popper';\n}\n\nconst SelectContentImpl = React.forwardRef<SelectContentImplElement, SelectContentImplProps>(\n  (props: ScopedProps<SelectContentImplProps>, forwardedRef) => {\n    const {\n      __scopeSelect,\n      position = 'item-aligned',\n      onCloseAutoFocus,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      //\n      // PopperContent props\n      side,\n      sideOffset,\n      align,\n      alignOffset,\n      arrowPadding,\n      collisionBoundary,\n      collisionPadding,\n      sticky,\n      hideWhenDetached,\n      avoidCollisions,\n      //\n      ...contentProps\n    } = props;\n    const context = useSelectContext(CONTENT_NAME, __scopeSelect);\n    const [content, setContent] = React.useState<SelectContentImplElement | null>(null);\n    const [viewport, setViewport] = React.useState<SelectViewportElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n    const [selectedItem, setSelectedItem] = React.useState<SelectItemElement | null>(null);\n    const [selectedItemText, setSelectedItemText] = React.useState<SelectItemTextElement | null>(\n      null\n    );\n    const getItems = useCollection(__scopeSelect);\n    const [isPositioned, setIsPositioned] = React.useState(false);\n    const firstValidItemFoundRef = React.useRef(false);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      if (content) return hideOthers(content);\n    }, [content]);\n\n    // Make sure the whole tree has focus guards as our `Select` may be\n    // the last element in the DOM (because of the `Portal`)\n    useFocusGuards();\n\n    const focusFirst = React.useCallback(\n      (candidates: Array<HTMLElement | null>) => {\n        const [firstItem, ...restItems] = getItems().map((item) => item.ref.current);\n        const [lastItem] = restItems.slice(-1);\n\n        const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n        for (const candidate of candidates) {\n          // if focus is already where we want to go, we don't want to keep going through the candidates\n          if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n          candidate?.scrollIntoView({ block: 'nearest' });\n          // viewport might have padding so scroll to its edges when focusing first/last items.\n          if (candidate === firstItem && viewport) viewport.scrollTop = 0;\n          if (candidate === lastItem && viewport) viewport.scrollTop = viewport.scrollHeight;\n          candidate?.focus();\n          if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n        }\n      },\n      [getItems, viewport]\n    );\n\n    const focusSelectedItem = React.useCallback(\n      () => focusFirst([selectedItem, content]),\n      [focusFirst, selectedItem, content]\n    );\n\n    // Since this is not dependent on layout, we want to ensure this runs at the same time as\n    // other effects across components. Hence why we don't call `focusSelectedItem` inside `position`.\n    React.useEffect(() => {\n      if (isPositioned) {\n        focusSelectedItem();\n      }\n    }, [isPositioned, focusSelectedItem]);\n\n    // prevent selecting items on `pointerup` in some cases after opening from `pointerdown`\n    // and close on `pointerup` outside.\n    const { onOpenChange, triggerPointerDownPosRef } = context;\n    React.useEffect(() => {\n      if (content) {\n        let pointerMoveDelta = { x: 0, y: 0 };\n\n        const handlePointerMove = (event: PointerEvent) => {\n          pointerMoveDelta = {\n            x: Math.abs(Math.round(event.pageX) - (triggerPointerDownPosRef.current?.x ?? 0)),\n            y: Math.abs(Math.round(event.pageY) - (triggerPointerDownPosRef.current?.y ?? 0)),\n          };\n        };\n        const handlePointerUp = (event: PointerEvent) => {\n          // If the pointer hasn't moved by a certain threshold then we prevent selecting item on `pointerup`.\n          if (pointerMoveDelta.x <= 10 && pointerMoveDelta.y <= 10) {\n            event.preventDefault();\n          } else {\n            // otherwise, if the event was outside the content, close.\n            if (!content.contains(event.target as HTMLElement)) {\n              onOpenChange(false);\n            }\n          }\n          document.removeEventListener('pointermove', handlePointerMove);\n          triggerPointerDownPosRef.current = null;\n        };\n\n        if (triggerPointerDownPosRef.current !== null) {\n          document.addEventListener('pointermove', handlePointerMove);\n          document.addEventListener('pointerup', handlePointerUp, { capture: true, once: true });\n        }\n\n        return () => {\n          document.removeEventListener('pointermove', handlePointerMove);\n          document.removeEventListener('pointerup', handlePointerUp, { capture: true });\n        };\n      }\n    }, [content, onOpenChange, triggerPointerDownPosRef]);\n\n    React.useEffect(() => {\n      const close = () => onOpenChange(false);\n      window.addEventListener('blur', close);\n      window.addEventListener('resize', close);\n      return () => {\n        window.removeEventListener('blur', close);\n        window.removeEventListener('resize', close);\n      };\n    }, [onOpenChange]);\n\n    const [searchRef, handleTypeaheadSearch] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.ref.current === document.activeElement);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem) {\n        /**\n         * Imperative focus during keydown is risky so we prevent React's batching updates\n         * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n         */\n        setTimeout(() => (nextItem.ref.current as HTMLElement).focus());\n      }\n    });\n\n    const itemRefCallback = React.useCallback(\n      (node: SelectItemElement | null, value: string, disabled: boolean) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== undefined && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItem(node);\n          if (isFirstValidItem) firstValidItemFoundRef.current = true;\n        }\n      },\n      [context.value]\n    );\n    const handleItemLeave = React.useCallback(() => content?.focus(), [content]);\n    const itemTextRefCallback = React.useCallback(\n      (node: SelectItemTextElement | null, value: string, disabled: boolean) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== undefined && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItemText(node);\n        }\n      },\n      [context.value]\n    );\n\n    const SelectPosition = position === 'popper' ? SelectPopperPosition : SelectItemAlignedPosition;\n\n    // Silently ignore props that are not supported by `SelectItemAlignedPosition`\n    const popperContentProps =\n      SelectPosition === SelectPopperPosition\n        ? {\n            side,\n            sideOffset,\n            align,\n            alignOffset,\n            arrowPadding,\n            collisionBoundary,\n            collisionPadding,\n            sticky,\n            hideWhenDetached,\n            avoidCollisions,\n          }\n        : {};\n\n    return (\n      <SelectContentProvider\n        scope={__scopeSelect}\n        content={content}\n        viewport={viewport}\n        onViewportChange={setViewport}\n        itemRefCallback={itemRefCallback}\n        selectedItem={selectedItem}\n        onItemLeave={handleItemLeave}\n        itemTextRefCallback={itemTextRefCallback}\n        focusSelectedItem={focusSelectedItem}\n        selectedItemText={selectedItemText}\n        position={position}\n        isPositioned={isPositioned}\n        searchRef={searchRef}\n      >\n        <RemoveScroll as={Slot} allowPinchZoom>\n          <FocusScope\n            asChild\n            // we make sure we're not trapping once it's been closed\n            // (closed !== unmounted when animating out)\n            trapped={context.open}\n            onMountAutoFocus={(event) => {\n              // we prevent open autofocus because we manually focus the selected item\n              event.preventDefault();\n            }}\n            onUnmountAutoFocus={composeEventHandlers(onCloseAutoFocus, (event) => {\n              context.trigger?.focus({ preventScroll: true });\n              event.preventDefault();\n            })}\n          >\n            <DismissableLayer\n              asChild\n              disableOutsidePointerEvents\n              onEscapeKeyDown={onEscapeKeyDown}\n              onPointerDownOutside={onPointerDownOutside}\n              // When focus is trapped, a focusout event may still happen.\n              // We make sure we don't trigger our `onDismiss` in such case.\n              onFocusOutside={(event) => event.preventDefault()}\n              onDismiss={() => context.onOpenChange(false)}\n            >\n              <SelectPosition\n                role=\"listbox\"\n                id={context.contentId}\n                data-state={context.open ? 'open' : 'closed'}\n                dir={context.dir}\n                onContextMenu={(event) => event.preventDefault()}\n                {...contentProps}\n                {...popperContentProps}\n                onPlaced={() => setIsPositioned(true)}\n                ref={composedRefs}\n                style={{\n                  // flex layout so we can place the scroll buttons properly\n                  display: 'flex',\n                  flexDirection: 'column',\n                  // reset the outline by default as the content MAY get focused\n                  outline: 'none',\n                  ...contentProps.style,\n                }}\n                onKeyDown={composeEventHandlers(contentProps.onKeyDown, (event) => {\n                  const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n\n                  // select should not be navigated using tab key so we prevent it\n                  if (event.key === 'Tab') event.preventDefault();\n\n                  if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n\n                  if (['ArrowUp', 'ArrowDown', 'Home', 'End'].includes(event.key)) {\n                    const items = getItems().filter((item) => !item.disabled);\n                    let candidateNodes = items.map((item) => item.ref.current!);\n\n                    if (['ArrowUp', 'End'].includes(event.key)) {\n                      candidateNodes = candidateNodes.slice().reverse();\n                    }\n                    if (['ArrowUp', 'ArrowDown'].includes(event.key)) {\n                      const currentElement = event.target as SelectItemElement;\n                      const currentIndex = candidateNodes.indexOf(currentElement);\n                      candidateNodes = candidateNodes.slice(currentIndex + 1);\n                    }\n\n                    /**\n                     * Imperative focus during keydown is risky so we prevent React's batching updates\n                     * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n                     */\n                    setTimeout(() => focusFirst(candidateNodes));\n\n                    event.preventDefault();\n                  }\n                })}\n              />\n            </DismissableLayer>\n          </FocusScope>\n        </RemoveScroll>\n      </SelectContentProvider>\n    );\n  }\n);\n\nSelectContentImpl.displayName = CONTENT_IMPL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemAlignedPosition\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_ALIGNED_POSITION_NAME = 'SelectItemAlignedPosition';\n\ntype SelectItemAlignedPositionElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectItemAlignedPositionProps extends PrimitiveDivProps, SelectPopperPrivateProps {}\n\nconst SelectItemAlignedPosition = React.forwardRef<\n  SelectItemAlignedPositionElement,\n  SelectItemAlignedPositionProps\n>((props: ScopedProps<SelectItemAlignedPositionProps>, forwardedRef) => {\n  const { __scopeSelect, onPlaced, ...popperProps } = props;\n  const context = useSelectContext(CONTENT_NAME, __scopeSelect);\n  const contentContext = useSelectContentContext(CONTENT_NAME, __scopeSelect);\n  const [contentWrapper, setContentWrapper] = React.useState<HTMLDivElement | null>(null);\n  const [content, setContent] = React.useState<SelectItemAlignedPositionElement | null>(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n  const getItems = useCollection(__scopeSelect);\n  const shouldExpandOnScrollRef = React.useRef(false);\n  const shouldRepositionRef = React.useRef(true);\n\n  const { viewport, selectedItem, selectedItemText, focusSelectedItem } = contentContext;\n  const position = React.useCallback(() => {\n    if (\n      context.trigger &&\n      context.valueNode &&\n      contentWrapper &&\n      content &&\n      viewport &&\n      selectedItem &&\n      selectedItemText\n    ) {\n      const triggerRect = context.trigger.getBoundingClientRect();\n\n      // -----------------------------------------------------------------------------------------\n      //  Horizontal positioning\n      // -----------------------------------------------------------------------------------------\n      const contentRect = content.getBoundingClientRect();\n      const valueNodeRect = context.valueNode.getBoundingClientRect();\n      const itemTextRect = selectedItemText.getBoundingClientRect();\n\n      if (context.dir !== 'rtl') {\n        const itemTextOffset = itemTextRect.left - contentRect.left;\n        const left = valueNodeRect.left - itemTextOffset;\n        const leftDelta = triggerRect.left - left;\n        const minContentWidth = triggerRect.width + leftDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const rightEdge = window.innerWidth - CONTENT_MARGIN;\n        const clampedLeft = clamp(left, [CONTENT_MARGIN, rightEdge - contentWidth]);\n\n        contentWrapper.style.minWidth = minContentWidth + 'px';\n        contentWrapper.style.left = clampedLeft + 'px';\n      } else {\n        const itemTextOffset = contentRect.right - itemTextRect.right;\n        const right = window.innerWidth - valueNodeRect.right - itemTextOffset;\n        const rightDelta = window.innerWidth - triggerRect.right - right;\n        const minContentWidth = triggerRect.width + rightDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const leftEdge = window.innerWidth - CONTENT_MARGIN;\n        const clampedRight = clamp(right, [CONTENT_MARGIN, leftEdge - contentWidth]);\n\n        contentWrapper.style.minWidth = minContentWidth + 'px';\n        contentWrapper.style.right = clampedRight + 'px';\n      }\n\n      // -----------------------------------------------------------------------------------------\n      // Vertical positioning\n      // -----------------------------------------------------------------------------------------\n      const items = getItems();\n      const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n      const itemsHeight = viewport.scrollHeight;\n\n      const contentStyles = window.getComputedStyle(content);\n      const contentBorderTopWidth = parseInt(contentStyles.borderTopWidth, 10);\n      const contentPaddingTop = parseInt(contentStyles.paddingTop, 10);\n      const contentBorderBottomWidth = parseInt(contentStyles.borderBottomWidth, 10);\n      const contentPaddingBottom = parseInt(contentStyles.paddingBottom, 10);\n      const fullContentHeight = contentBorderTopWidth + contentPaddingTop + itemsHeight + contentPaddingBottom + contentBorderBottomWidth; // prettier-ignore\n      const minContentHeight = Math.min(selectedItem.offsetHeight * 5, fullContentHeight);\n\n      const viewportStyles = window.getComputedStyle(viewport);\n      const viewportPaddingTop = parseInt(viewportStyles.paddingTop, 10);\n      const viewportPaddingBottom = parseInt(viewportStyles.paddingBottom, 10);\n\n      const topEdgeToTriggerMiddle = triggerRect.top + triggerRect.height / 2 - CONTENT_MARGIN;\n      const triggerMiddleToBottomEdge = availableHeight - topEdgeToTriggerMiddle;\n\n      const selectedItemHalfHeight = selectedItem.offsetHeight / 2;\n      const itemOffsetMiddle = selectedItem.offsetTop + selectedItemHalfHeight;\n      const contentTopToItemMiddle = contentBorderTopWidth + contentPaddingTop + itemOffsetMiddle;\n      const itemMiddleToContentBottom = fullContentHeight - contentTopToItemMiddle;\n\n      const willAlignWithoutTopOverflow = contentTopToItemMiddle <= topEdgeToTriggerMiddle;\n\n      if (willAlignWithoutTopOverflow) {\n        const isLastItem = selectedItem === items[items.length - 1].ref.current;\n        contentWrapper.style.bottom = 0 + 'px';\n        const viewportOffsetBottom =\n          content.clientHeight - viewport.offsetTop - viewport.offsetHeight;\n        const clampedTriggerMiddleToBottomEdge = Math.max(\n          triggerMiddleToBottomEdge,\n          selectedItemHalfHeight +\n            // viewport might have padding bottom, include it to avoid a scrollable viewport\n            (isLastItem ? viewportPaddingBottom : 0) +\n            viewportOffsetBottom +\n            contentBorderBottomWidth\n        );\n        const height = contentTopToItemMiddle + clampedTriggerMiddleToBottomEdge;\n        contentWrapper.style.height = height + 'px';\n      } else {\n        const isFirstItem = selectedItem === items[0].ref.current;\n        contentWrapper.style.top = 0 + 'px';\n        const clampedTopEdgeToTriggerMiddle = Math.max(\n          topEdgeToTriggerMiddle,\n          contentBorderTopWidth +\n            viewport.offsetTop +\n            // viewport might have padding top, include it to avoid a scrollable viewport\n            (isFirstItem ? viewportPaddingTop : 0) +\n            selectedItemHalfHeight\n        );\n        const height = clampedTopEdgeToTriggerMiddle + itemMiddleToContentBottom;\n        contentWrapper.style.height = height + 'px';\n        viewport.scrollTop = contentTopToItemMiddle - topEdgeToTriggerMiddle + viewport.offsetTop;\n      }\n\n      contentWrapper.style.margin = `${CONTENT_MARGIN}px 0`;\n      contentWrapper.style.minHeight = minContentHeight + 'px';\n      contentWrapper.style.maxHeight = availableHeight + 'px';\n      // -----------------------------------------------------------------------------------------\n\n      onPlaced?.();\n\n      // we don't want the initial scroll position adjustment to trigger \"expand on scroll\"\n      // so we explicitly turn it on only after they've registered.\n      requestAnimationFrame(() => (shouldExpandOnScrollRef.current = true));\n    }\n  }, [\n    getItems,\n    context.trigger,\n    context.valueNode,\n    contentWrapper,\n    content,\n    viewport,\n    selectedItem,\n    selectedItemText,\n    context.dir,\n    onPlaced,\n  ]);\n\n  useLayoutEffect(() => position(), [position]);\n\n  // copy z-index from content to wrapper\n  const [contentZIndex, setContentZIndex] = React.useState<string>();\n  useLayoutEffect(() => {\n    if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n  }, [content]);\n\n  // When the viewport becomes scrollable at the top, the scroll up button will mount.\n  // Because it is part of the normal flow, it will push down the viewport, thus throwing our\n  // trigger => selectedItem alignment off by the amount the viewport was pushed down.\n  // We wait for this to happen and then re-run the positining logic one more time to account for it.\n  const handleScrollButtonChange = React.useCallback(\n    (node: SelectScrollButtonImplElement | null) => {\n      if (node && shouldRepositionRef.current === true) {\n        position();\n        focusSelectedItem?.();\n        shouldRepositionRef.current = false;\n      }\n    },\n    [position, focusSelectedItem]\n  );\n\n  return (\n    <SelectViewportProvider\n      scope={__scopeSelect}\n      contentWrapper={contentWrapper}\n      shouldExpandOnScrollRef={shouldExpandOnScrollRef}\n      onScrollButtonChange={handleScrollButtonChange}\n    >\n      <div\n        ref={setContentWrapper}\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          position: 'fixed',\n          zIndex: contentZIndex,\n        }}\n      >\n        <Primitive.div\n          {...popperProps}\n          ref={composedRefs}\n          style={{\n            // When we get the height of the content, it includes borders. If we were to set\n            // the height without having `boxSizing: 'border-box'` it would be too big.\n            boxSizing: 'border-box',\n            // We need to ensure the content doesn't get taller than the wrapper\n            maxHeight: '100%',\n            ...popperProps.style,\n          }}\n        />\n      </div>\n    </SelectViewportProvider>\n  );\n});\n\nSelectItemAlignedPosition.displayName = ITEM_ALIGNED_POSITION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectPopperPosition\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_POSITION_NAME = 'SelectPopperPosition';\n\ntype SelectPopperPositionElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype PopperContentProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface SelectPopperPositionProps extends PopperContentProps, SelectPopperPrivateProps {}\n\nconst SelectPopperPosition = React.forwardRef<\n  SelectPopperPositionElement,\n  SelectPopperPositionProps\n>((props: ScopedProps<SelectPopperPositionProps>, forwardedRef) => {\n  const {\n    __scopeSelect,\n    align = 'start',\n    collisionPadding = CONTENT_MARGIN,\n    ...popperProps\n  } = props;\n  const popperScope = usePopperScope(__scopeSelect);\n\n  return (\n    <PopperPrimitive.Content\n      {...popperScope}\n      {...popperProps}\n      ref={forwardedRef}\n      align={align}\n      collisionPadding={collisionPadding}\n      style={{\n        // Ensure border-box for floating-ui calculations\n        boxSizing: 'border-box',\n        ...popperProps.style,\n        // re-namespace exposed content custom properties\n        ...{\n          '--radix-select-content-transform-origin': 'var(--radix-popper-transform-origin)',\n          '--radix-select-content-available-width': 'var(--radix-popper-available-width)',\n          '--radix-select-content-available-height': 'var(--radix-popper-available-height)',\n          '--radix-select-trigger-width': 'var(--radix-popper-anchor-width)',\n          '--radix-select-trigger-height': 'var(--radix-popper-anchor-height)',\n        },\n      }}\n    />\n  );\n});\n\nSelectPopperPosition.displayName = POPPER_POSITION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectViewport\n * -----------------------------------------------------------------------------------------------*/\n\ntype SelectViewportContextValue = {\n  contentWrapper?: HTMLDivElement | null;\n  shouldExpandOnScrollRef?: React.RefObject<boolean>;\n  onScrollButtonChange?: (node: SelectScrollButtonImplElement | null) => void;\n};\n\nconst [SelectViewportProvider, useSelectViewportContext] =\n  createSelectContext<SelectViewportContextValue>(CONTENT_NAME, {});\n\nconst VIEWPORT_NAME = 'SelectViewport';\n\ntype SelectViewportElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface SelectViewportProps extends PrimitiveDivProps {}\n\nconst SelectViewport = React.forwardRef<SelectViewportElement, SelectViewportProps>(\n  (props: ScopedProps<SelectViewportProps>, forwardedRef) => {\n    const { __scopeSelect, ...viewportProps } = props;\n    const contentContext = useSelectContentContext(VIEWPORT_NAME, __scopeSelect);\n    const viewportContext = useSelectViewportContext(VIEWPORT_NAME, __scopeSelect);\n    const composedRefs = useComposedRefs(forwardedRef, contentContext.onViewportChange);\n    const prevScrollTopRef = React.useRef(0);\n    return (\n      <>\n        {/* Hide scrollbars cross-browser and enable momentum scroll for touch devices */}\n        <style\n          dangerouslySetInnerHTML={{\n            __html: `[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}`,\n          }}\n        />\n        <Collection.Slot scope={__scopeSelect}>\n          <Primitive.div\n            data-radix-select-viewport=\"\"\n            role=\"presentation\"\n            {...viewportProps}\n            ref={composedRefs}\n            style={{\n              // we use position: 'relative' here on the `viewport` so that when we call\n              // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport\n              // (independent of the scrollUpButton).\n              position: 'relative',\n              flex: 1,\n              overflow: 'auto',\n              ...viewportProps.style,\n            }}\n            onScroll={composeEventHandlers(viewportProps.onScroll, (event) => {\n              const viewport = event.currentTarget;\n              const { contentWrapper, shouldExpandOnScrollRef } = viewportContext;\n              if (shouldExpandOnScrollRef?.current && contentWrapper) {\n                const scrolledBy = Math.abs(prevScrollTopRef.current - viewport.scrollTop);\n                if (scrolledBy > 0) {\n                  const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n                  const cssMinHeight = parseFloat(contentWrapper.style.minHeight);\n                  const cssHeight = parseFloat(contentWrapper.style.height);\n                  const prevHeight = Math.max(cssMinHeight, cssHeight);\n\n                  if (prevHeight < availableHeight) {\n                    const nextHeight = prevHeight + scrolledBy;\n                    const clampedNextHeight = Math.min(availableHeight, nextHeight);\n                    const heightDiff = nextHeight - clampedNextHeight;\n\n                    contentWrapper.style.height = clampedNextHeight + 'px';\n                    if (contentWrapper.style.bottom === '0px') {\n                      viewport.scrollTop = heightDiff > 0 ? heightDiff : 0;\n                      // ensure the content stays pinned to the bottom\n                      contentWrapper.style.justifyContent = 'flex-end';\n                    }\n                  }\n                }\n              }\n              prevScrollTopRef.current = viewport.scrollTop;\n            })}\n          />\n        </Collection.Slot>\n      </>\n    );\n  }\n);\n\nSelectViewport.displayName = VIEWPORT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'SelectGroup';\n\ntype SelectGroupContextValue = { id: string };\n\nconst [SelectGroupContextProvider, useSelectGroupContext] =\n  createSelectContext<SelectGroupContextValue>(GROUP_NAME);\n\ntype SelectGroupElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectGroupProps extends PrimitiveDivProps {}\n\nconst SelectGroup = React.forwardRef<SelectGroupElement, SelectGroupProps>(\n  (props: ScopedProps<SelectGroupProps>, forwardedRef) => {\n    const { __scopeSelect, ...groupProps } = props;\n    const groupId = useId();\n    return (\n      <SelectGroupContextProvider scope={__scopeSelect} id={groupId}>\n        <Primitive.div role=\"group\" aria-labelledby={groupId} {...groupProps} ref={forwardedRef} />\n      </SelectGroupContextProvider>\n    );\n  }\n);\n\nSelectGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'SelectLabel';\n\ntype SelectLabelElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectLabelProps extends PrimitiveDivProps {}\n\nconst SelectLabel = React.forwardRef<SelectLabelElement, SelectLabelProps>(\n  (props: ScopedProps<SelectLabelProps>, forwardedRef) => {\n    const { __scopeSelect, ...labelProps } = props;\n    const groupContext = useSelectGroupContext(LABEL_NAME, __scopeSelect);\n    return <Primitive.div id={groupContext.id} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nSelectLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'SelectItem';\n\ntype SelectItemContextValue = {\n  value: string;\n  disabled: boolean;\n  textId: string;\n  isSelected: boolean;\n  onItemTextChange(node: SelectItemTextElement | null): void;\n};\n\nconst [SelectItemContextProvider, useSelectItemContext] =\n  createSelectContext<SelectItemContextValue>(ITEM_NAME);\n\ntype SelectItemElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectItemProps extends PrimitiveDivProps {\n  value: string;\n  disabled?: boolean;\n  textValue?: string;\n}\n\nconst SelectItem = React.forwardRef<SelectItemElement, SelectItemProps>(\n  (props: ScopedProps<SelectItemProps>, forwardedRef) => {\n    const {\n      __scopeSelect,\n      value,\n      disabled = false,\n      textValue: textValueProp,\n      ...itemProps\n    } = props;\n    const context = useSelectContext(ITEM_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_NAME, __scopeSelect);\n    const isSelected = context.value === value;\n    const [textValue, setTextValue] = React.useState(textValueProp ?? '');\n    const [isFocused, setIsFocused] = React.useState(false);\n    const composedRefs = useComposedRefs(forwardedRef, (node) =>\n      contentContext.itemRefCallback?.(node, value, disabled)\n    );\n    const textId = useId();\n\n    const handleSelect = () => {\n      if (!disabled) {\n        context.onValueChange(value);\n        context.onOpenChange(false);\n      }\n    };\n\n    if (value === '') {\n      throw new Error(\n        'A <Select.Item /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder.'\n      );\n    }\n\n    return (\n      <SelectItemContextProvider\n        scope={__scopeSelect}\n        value={value}\n        disabled={disabled}\n        textId={textId}\n        isSelected={isSelected}\n        onItemTextChange={React.useCallback((node) => {\n          setTextValue((prevTextValue) => prevTextValue || (node?.textContent ?? '').trim());\n        }, [])}\n      >\n        <Collection.ItemSlot\n          scope={__scopeSelect}\n          value={value}\n          disabled={disabled}\n          textValue={textValue}\n        >\n          <Primitive.div\n            role=\"option\"\n            aria-labelledby={textId}\n            data-highlighted={isFocused ? '' : undefined}\n            // `isFocused` caveat fixes stuttering in VoiceOver\n            aria-selected={isSelected && isFocused}\n            data-state={isSelected ? 'checked' : 'unchecked'}\n            aria-disabled={disabled || undefined}\n            data-disabled={disabled ? '' : undefined}\n            tabIndex={disabled ? undefined : -1}\n            {...itemProps}\n            ref={composedRefs}\n            onFocus={composeEventHandlers(itemProps.onFocus, () => setIsFocused(true))}\n            onBlur={composeEventHandlers(itemProps.onBlur, () => setIsFocused(false))}\n            onPointerUp={composeEventHandlers(itemProps.onPointerUp, handleSelect)}\n            onPointerMove={composeEventHandlers(itemProps.onPointerMove, (event) => {\n              if (disabled) {\n                contentContext.onItemLeave?.();\n              } else {\n                // even though safari doesn't support this option, it's acceptable\n                // as it only means it might scroll a few pixels when using the pointer.\n                event.currentTarget.focus({ preventScroll: true });\n              }\n            })}\n            onPointerLeave={composeEventHandlers(itemProps.onPointerLeave, (event) => {\n              if (event.currentTarget === document.activeElement) {\n                contentContext.onItemLeave?.();\n              }\n            })}\n            onKeyDown={composeEventHandlers(itemProps.onKeyDown, (event) => {\n              const isTypingAhead = contentContext.searchRef?.current !== '';\n              if (isTypingAhead && event.key === ' ') return;\n              if (SELECTION_KEYS.includes(event.key)) handleSelect();\n              // prevent page scroll if using the space key to select an item\n              if (event.key === ' ') event.preventDefault();\n            })}\n          />\n        </Collection.ItemSlot>\n      </SelectItemContextProvider>\n    );\n  }\n);\n\nSelectItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemText\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_TEXT_NAME = 'SelectItemText';\n\ntype SelectItemTextElement = React.ElementRef<typeof Primitive.span>;\ninterface SelectItemTextProps extends PrimitiveSpanProps {}\n\nconst SelectItemText = React.forwardRef<SelectItemTextElement, SelectItemTextProps>(\n  (props: ScopedProps<SelectItemTextProps>, forwardedRef) => {\n    // We ignore `className` and `style` as this part shouldn't be styled.\n    const { __scopeSelect, className, style, ...itemTextProps } = props;\n    const context = useSelectContext(ITEM_TEXT_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_TEXT_NAME, __scopeSelect);\n    const itemContext = useSelectItemContext(ITEM_TEXT_NAME, __scopeSelect);\n    const nativeOptionsContext = useSelectNativeOptionsContext(ITEM_TEXT_NAME, __scopeSelect);\n    const [itemTextNode, setItemTextNode] = React.useState<SelectItemTextElement | null>(null);\n    const composedRefs = useComposedRefs(\n      forwardedRef,\n      (node) => setItemTextNode(node),\n      itemContext.onItemTextChange,\n      (node) => contentContext.itemTextRefCallback?.(node, itemContext.value, itemContext.disabled)\n    );\n\n    const textContent = itemTextNode?.textContent;\n    const nativeOption = React.useMemo(\n      () => (\n        <option key={itemContext.value} value={itemContext.value} disabled={itemContext.disabled}>\n          {textContent}\n        </option>\n      ),\n      [itemContext.disabled, itemContext.value, textContent]\n    );\n\n    const { onNativeOptionAdd, onNativeOptionRemove } = nativeOptionsContext;\n    useLayoutEffect(() => {\n      onNativeOptionAdd(nativeOption);\n      return () => onNativeOptionRemove(nativeOption);\n    }, [onNativeOptionAdd, onNativeOptionRemove, nativeOption]);\n\n    return (\n      <>\n        <Primitive.span id={itemContext.textId} {...itemTextProps} ref={composedRefs} />\n\n        {/* Portal the select item text into the trigger value node */}\n        {itemContext.isSelected && context.valueNode && !context.valueNodeHasChildren\n          ? ReactDOM.createPortal(itemTextProps.children, context.valueNode)\n          : null}\n      </>\n    );\n  }\n);\n\nSelectItemText.displayName = ITEM_TEXT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_INDICATOR_NAME = 'SelectItemIndicator';\n\ntype SelectItemIndicatorElement = React.ElementRef<typeof Primitive.span>;\ninterface SelectItemIndicatorProps extends PrimitiveSpanProps {}\n\nconst SelectItemIndicator = React.forwardRef<SelectItemIndicatorElement, SelectItemIndicatorProps>(\n  (props: ScopedProps<SelectItemIndicatorProps>, forwardedRef) => {\n    const { __scopeSelect, ...itemIndicatorProps } = props;\n    const itemContext = useSelectItemContext(ITEM_INDICATOR_NAME, __scopeSelect);\n    return itemContext.isSelected ? (\n      <Primitive.span aria-hidden {...itemIndicatorProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nSelectItemIndicator.displayName = ITEM_INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectScrollUpButton\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_UP_BUTTON_NAME = 'SelectScrollUpButton';\n\ntype SelectScrollUpButtonElement = SelectScrollButtonImplElement;\ninterface SelectScrollUpButtonProps extends Omit<SelectScrollButtonImplProps, 'onAutoScroll'> {}\n\nconst SelectScrollUpButton = React.forwardRef<\n  SelectScrollUpButtonElement,\n  SelectScrollUpButtonProps\n>((props: ScopedProps<SelectScrollUpButtonProps>, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const viewportContext = useSelectViewportContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollUp, setCanScrollUp] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);\n\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      const viewport = contentContext.viewport;\n      function handleScroll() {\n        const canScrollUp = viewport.scrollTop > 0;\n        setCanScrollUp(canScrollUp);\n      }\n      handleScroll();\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n\n  return canScrollUp ? (\n    <SelectScrollButtonImpl\n      {...props}\n      ref={composedRefs}\n      onAutoScroll={() => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop - selectedItem.offsetHeight;\n        }\n      }}\n    />\n  ) : null;\n});\n\nSelectScrollUpButton.displayName = SCROLL_UP_BUTTON_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectScrollDownButton\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_DOWN_BUTTON_NAME = 'SelectScrollDownButton';\n\ntype SelectScrollDownButtonElement = SelectScrollButtonImplElement;\ninterface SelectScrollDownButtonProps extends Omit<SelectScrollButtonImplProps, 'onAutoScroll'> {}\n\nconst SelectScrollDownButton = React.forwardRef<\n  SelectScrollDownButtonElement,\n  SelectScrollDownButtonProps\n>((props: ScopedProps<SelectScrollDownButtonProps>, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const viewportContext = useSelectViewportContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollDown, setCanScrollDown] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);\n\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      const viewport = contentContext.viewport;\n      function handleScroll() {\n        const maxScroll = viewport.scrollHeight - viewport.clientHeight;\n        // we use Math.ceil here because if the UI is zoomed-in\n        // `scrollTop` is not always reported as an integer\n        const canScrollDown = Math.ceil(viewport.scrollTop) < maxScroll;\n        setCanScrollDown(canScrollDown);\n      }\n      handleScroll();\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n\n  return canScrollDown ? (\n    <SelectScrollButtonImpl\n      {...props}\n      ref={composedRefs}\n      onAutoScroll={() => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop + selectedItem.offsetHeight;\n        }\n      }}\n    />\n  ) : null;\n});\n\nSelectScrollDownButton.displayName = SCROLL_DOWN_BUTTON_NAME;\n\ntype SelectScrollButtonImplElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectScrollButtonImplProps extends PrimitiveDivProps {\n  onAutoScroll(): void;\n}\n\nconst SelectScrollButtonImpl = React.forwardRef<\n  SelectScrollButtonImplElement,\n  SelectScrollButtonImplProps\n>((props: ScopedProps<SelectScrollButtonImplProps>, forwardedRef) => {\n  const { __scopeSelect, onAutoScroll, ...scrollIndicatorProps } = props;\n  const contentContext = useSelectContentContext('SelectScrollButton', __scopeSelect);\n  const autoScrollTimerRef = React.useRef<number | null>(null);\n  const getItems = useCollection(__scopeSelect);\n\n  const clearAutoScrollTimer = React.useCallback(() => {\n    if (autoScrollTimerRef.current !== null) {\n      window.clearInterval(autoScrollTimerRef.current);\n      autoScrollTimerRef.current = null;\n    }\n  }, []);\n\n  React.useEffect(() => {\n    return () => clearAutoScrollTimer();\n  }, [clearAutoScrollTimer]);\n\n  // When the viewport becomes scrollable on either side, the relevant scroll button will mount.\n  // Because it is part of the normal flow, it will push down (top button) or shrink (bottom button)\n  // the viewport, potentially causing the active item to now be partially out of view.\n  // We re-run the `scrollIntoView` logic to make sure it stays within the viewport.\n  useLayoutEffect(() => {\n    const activeItem = getItems().find((item) => item.ref.current === document.activeElement);\n    activeItem?.ref.current?.scrollIntoView({ block: 'nearest' });\n  }, [getItems]);\n\n  return (\n    <Primitive.div\n      aria-hidden\n      {...scrollIndicatorProps}\n      ref={forwardedRef}\n      style={{ flexShrink: 0, ...scrollIndicatorProps.style }}\n      onPointerDown={composeEventHandlers(scrollIndicatorProps.onPointerDown, () => {\n        if (autoScrollTimerRef.current === null) {\n          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n        }\n      })}\n      onPointerMove={composeEventHandlers(scrollIndicatorProps.onPointerMove, () => {\n        contentContext.onItemLeave?.();\n        if (autoScrollTimerRef.current === null) {\n          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n        }\n      })}\n      onPointerLeave={composeEventHandlers(scrollIndicatorProps.onPointerLeave, () => {\n        clearAutoScrollTimer();\n      })}\n    />\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * SelectSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'SelectSeparator';\n\ntype SelectSeparatorElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectSeparatorProps extends PrimitiveDivProps {}\n\nconst SelectSeparator = React.forwardRef<SelectSeparatorElement, SelectSeparatorProps>(\n  (props: ScopedProps<SelectSeparatorProps>, forwardedRef) => {\n    const { __scopeSelect, ...separatorProps } = props;\n    return <Primitive.div aria-hidden {...separatorProps} ref={forwardedRef} />;\n  }\n);\n\nSelectSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'SelectArrow';\n\ntype SelectArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface SelectArrowProps extends PopperArrowProps {}\n\nconst SelectArrow = React.forwardRef<SelectArrowElement, SelectArrowProps>(\n  (props: ScopedProps<SelectArrowProps>, forwardedRef) => {\n    const { __scopeSelect, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeSelect);\n    const context = useSelectContext(ARROW_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ARROW_NAME, __scopeSelect);\n    return context.open && contentContext.position === 'popper' ? (\n      <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nSelectArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction shouldShowPlaceholder(value?: string) {\n  return value === '' || value === undefined;\n}\n\nconst BubbleSelect = React.forwardRef<HTMLSelectElement, React.ComponentPropsWithoutRef<'select'>>(\n  (props, forwardedRef) => {\n    const { value, ...selectProps } = props;\n    const ref = React.useRef<HTMLSelectElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const prevValue = usePrevious(value);\n\n    // Bubble value change to parents (e.g form change event)\n    React.useEffect(() => {\n      const select = ref.current!;\n      const selectProto = window.HTMLSelectElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        selectProto,\n        'value'\n      ) as PropertyDescriptor;\n      const setValue = descriptor.set;\n      if (prevValue !== value && setValue) {\n        const event = new Event('change', { bubbles: true });\n        setValue.call(select, value);\n        select.dispatchEvent(event);\n      }\n    }, [prevValue, value]);\n\n    /**\n     * We purposefully use a `select` here to support form autofill as much\n     * as possible.\n     *\n     * We purposefully do not add the `value` attribute here to allow the value\n     * to be set programatically and bubble to any parent form `onChange` event.\n     * Adding the `value` will cause React to consider the programatic\n     * dispatch a duplicate and it will get swallowed.\n     *\n     * We use `VisuallyHidden` rather than `display: \"none\"` because Safari autofill\n     * won't work otherwise.\n     */\n    return (\n      <VisuallyHidden asChild>\n        <select {...selectProps} ref={composedRefs} defaultValue={value} />\n      </VisuallyHidden>\n    );\n  }\n);\n\nBubbleSelect.displayName = 'BubbleSelect';\n\nfunction useTypeaheadSearch(onSearchChange: (search: string) => void) {\n  const handleSearchChange = useCallbackRef(onSearchChange);\n  const searchRef = React.useRef('');\n  const timerRef = React.useRef(0);\n\n  const handleTypeaheadSearch = React.useCallback(\n    (key: string) => {\n      const search = searchRef.current + key;\n      handleSearchChange(search);\n\n      (function updateSearch(value: string) {\n        searchRef.current = value;\n        window.clearTimeout(timerRef.current);\n        // Reset `searchRef` 1 second after it was last updated\n        if (value !== '') timerRef.current = window.setTimeout(() => updateSearch(''), 1000);\n      })(search);\n    },\n    [handleSearchChange]\n  );\n\n  const resetTypeahead = React.useCallback(() => {\n    searchRef.current = '';\n    window.clearTimeout(timerRef.current);\n  }, []);\n\n  React.useEffect(() => {\n    return () => window.clearTimeout(timerRef.current);\n  }, []);\n\n  return [searchRef, handleTypeaheadSearch, resetTypeahead] as const;\n}\n\n/**\n * This is the \"meat\" of the typeahead matching logic. It takes in a list of items,\n * the search and the current item, and returns the next item (or `undefined`).\n *\n * We normalize the search because if a user has repeatedly pressed a character,\n * we want the exact same behavior as if we only had that one character\n * (ie. cycle through items starting with that character)\n *\n * We also reorder the items by wrapping the array around the current item.\n * This is so we always look forward from the current item, and picking the first\n * item will always be the correct one.\n *\n * Finally, if the normalized search is exactly one character, we exclude the\n * current item from the values because otherwise it would be the first to match always\n * and focus would never move. This is as opposed to the regular case, where we\n * don't want focus to move if the current item still matches.\n */\nfunction findNextItem<T extends { textValue: string }>(\n  items: T[],\n  search: string,\n  currentItem?: T\n) {\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0] : search;\n  const currentItemIndex = currentItem ? items.indexOf(currentItem) : -1;\n  let wrappedItems = wrapArray(items, Math.max(currentItemIndex, 0));\n  const excludeCurrentItem = normalizedSearch.length === 1;\n  if (excludeCurrentItem) wrappedItems = wrappedItems.filter((v) => v !== currentItem);\n  const nextItem = wrappedItems.find((item) =>\n    item.textValue.toLowerCase().startsWith(normalizedSearch.toLowerCase())\n  );\n  return nextItem !== currentItem ? nextItem : undefined;\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\nconst Root = Select;\nconst Trigger = SelectTrigger;\nconst Value = SelectValue;\nconst Icon = SelectIcon;\nconst Portal = SelectPortal;\nconst Content = SelectContent;\nconst Viewport = SelectViewport;\nconst Group = SelectGroup;\nconst Label = SelectLabel;\nconst Item = SelectItem;\nconst ItemText = SelectItemText;\nconst ItemIndicator = SelectItemIndicator;\nconst ScrollUpButton = SelectScrollUpButton;\nconst ScrollDownButton = SelectScrollDownButton;\nconst Separator = SelectSeparator;\nconst Arrow = SelectArrow;\n\nexport {\n  createSelectScope,\n  //\n  Select,\n  SelectTrigger,\n  SelectValue,\n  SelectIcon,\n  SelectPortal,\n  SelectContent,\n  SelectViewport,\n  SelectGroup,\n  SelectLabel,\n  SelectItem,\n  SelectItemText,\n  SelectItemIndicator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n  SelectSeparator,\n  SelectArrow,\n  //\n  Root,\n  Trigger,\n  Value,\n  Icon,\n  Portal,\n  Content,\n  Viewport,\n  Group,\n  Label,\n  Item,\n  ItemText,\n  ItemIndicator,\n  ScrollUpButton,\n  ScrollDownButton,\n  Separator,\n  Arrow,\n};\nexport type {\n  SelectProps,\n  SelectTriggerProps,\n  SelectValueProps,\n  SelectIconProps,\n  SelectPortalProps,\n  SelectContentProps,\n  SelectViewportProps,\n  SelectGroupProps,\n  SelectLabelProps,\n  SelectItemProps,\n  SelectItemTextProps,\n  SelectItemIndicatorProps,\n  SelectScrollUpButtonProps,\n  SelectScrollDownButtonProps,\n  SelectSeparatorProps,\n  SelectArrowProps,\n};\n"],
  "mappings": "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",
  "names": ["clamp", "value", "min", "max", "Math", "composeEventHandlers", "originalEventHandler", "ourEventHandler", "checkForDefaultPrevented", "handleEvent", "event", "defaultPrevented", "createContextScope", "scopeName", "createContextScopeDeps", "defaultContexts", "createContext", "rootComponentName", "defaultContext", "BaseContext", "React", "index", "length", "Provider", "props", "context", "Context", "scope", "value", "Object", "values", "$3bkAK$createElement", "children", "useContext", "consumerName", "undefined", "Error", "displayName", "createScope", "scopeContexts", "map", "useScope", "contexts", "composeContextScopes", "scopes", "baseScope", "scopeHooks", "useComposedScopes", "overrideScopes", "nextScopes", "reduce", "scopeProps", "currentScope", "setRef", "ref", "value", "undefined", "current", "composeRefs", "refs", "node", "forEach", "useComposedRefs", "React", "Slot", "React", "props", "forwardedRef", "slotProps", "childrenArray", "toArray", "children", "slottable", "find", "isSlottable", "newElement", "newChildren", "map", "child", "count", "only", "$9IrjX$createElement", "undefined", "displayName", "SlotClone", "mergeProps", "ref", "composeRefs", "Slottable", "$9IrjX$Fragment", "type", "childProps", "overrideProps", "propName", "slotPropValue", "childPropValue", "isHandler", "test", "args", "filter", "Boolean", "join", "createCollection", "name", "PROVIDER_NAME", "createCollectionContext", "createCollectionScope", "createContextScope", "CollectionProviderImpl", "useCollectionContext", "collectionRef", "current", "itemMap", "Map", "CollectionProvider", "props", "children", "ref", "React", "useRef", "$6vYhU$react", "COLLECTION_SLOT_NAME", "CollectionSlot", "forwardRef", "forwardedRef", "context", "scope", "composedRefs", "useComposedRefs", "ITEM_SLOT_NAME", "ITEM_DATA_ATTR", "CollectionItemSlot", "itemData", "useEffect", "set", "delete", "useCollection", "getItems", "useCallback", "collectionNode", "orderedNodes", "Array", "from", "querySelectorAll", "items", "values", "orderedItems", "sort", "a", "b", "indexOf", "Provider", "Slot", "ItemSlot", "DirectionContext", "React", "undefined", "useDirection", "localDir", "globalDir", "React", "DirectionContext", "NODES", "Primitive", "reduce", "primitive", "node", "Node", "React", "props", "forwardedRef", "primitiveProps", "Comp", "asChild", "Slot", "window", "Symbol", "for", "$4q5Fq$createElement", "displayName", "dispatchDiscreteCustomEvent", "target", "event", "ReactDOM", "dispatchEvent", "useCallbackRef", "callback", "callbackRef", "React", "current", "args", "useEscapeKeydown", "onEscapeKeyDownProp", "ownerDocument", "globalThis", "document", "onEscapeKeyDown", "useCallbackRef", "React", "handleKeyDown", "event", "key", "addEventListener", "removeEventListener", "DISMISSABLE_LAYER_NAME", "CONTEXT_UPDATE", "POINTER_DOWN_OUTSIDE", "FOCUS_OUTSIDE", "originalBodyPointerEvents", "DismissableLayerContext", "React", "layers", "Set", "layersWithOutsidePointerEventsDisabled", "branches", "DismissableLayer", "props", "forwardedRef", "layerProps", "context", "node", "setNode", "ownerDocument", "globalThis", "document", "force", "composedRefs", "useComposedRefs", "Array", "from", "highestLayerWithOutsidePointerEventsDisabled", "slice", "highestLayerWithOutsidePointerEventsDisabledIndex", "indexOf", "index", "isBodyPointerEventsDisabled", "size", "isPointerEventsEnabled", "pointerDownOutside", "usePointerDownOutside", "event", "target", "isPointerDownOnBranch", "some", "branch", "contains", "onPointerDownOutside", "onInteractOutside", "defaultPrevented", "onDismiss", "focusOutside", "useFocusOutside", "isFocusInBranch", "onFocusOutside", "useEscapeKeydown", "isHighestLayer", "onEscapeKeyDown", "preventDefault", "disableOutsidePointerEvents", "body", "style", "pointerEvents", "add", "dispatchUpdate", "delete", "handleUpdate", "addEventListener", "removeEventListener", "$kqwpH$createElement", "undefined", "composeEventHandlers", "onFocusCapture", "onBlurCapture", "onPointerDownCapture", "BRANCH_NAME", "DismissableLayerBranch", "ref", "current", "handlePointerDownOutside", "useCallbackRef", "isPointerInsideReactTreeRef", "handleClickRef", "handlePointerDown", "handleAndDispatchPointerDownOutsideEvent", "handleAndDispatchCustomEvent", "eventDetail", "discrete", "originalEvent", "pointerType", "once", "timerId", "window", "setTimeout", "clearTimeout", "handleFocusOutside", "isFocusInsideReactTreeRef", "handleFocus", "CustomEvent", "dispatchEvent", "name", "handler", "detail", "bubbles", "cancelable", "dispatchDiscreteCustomEvent", "count", "useFocusGuards", "React", "edgeGuards", "document", "querySelectorAll", "body", "insertAdjacentElement", "createFocusGuard", "count", "forEach", "node", "remove", "element", "createElement", "setAttribute", "tabIndex", "style", "cssText", "AUTOFOCUS_ON_MOUNT", "AUTOFOCUS_ON_UNMOUNT", "EVENT_OPTIONS", "bubbles", "cancelable", "FOCUS_SCOPE_NAME", "FocusScope", "React", "props", "forwardedRef", "onMountAutoFocus", "onMountAutoFocusProp", "onUnmountAutoFocus", "onUnmountAutoFocusProp", "scopeProps", "container", "setContainer", "useCallbackRef", "lastFocusedElementRef", "composedRefs", "useComposedRefs", "node", "focusScope", "paused", "pause", "resume", "current", "trapped", "handleFocusIn", "event", "target", "contains", "focus", "select", "handleFocusOut", "relatedTarget", "handleMutations", "mutations", "focusedElement", "document", "activeElement", "body", "mutation", "removedNodes", "length", "addEventListener", "mutationObserver", "MutationObserver", "observe", "childList", "subtree", "removeEventListener", "disconnect", "focusScopesStack", "add", "previouslyFocusedElement", "hasFocusedCandidate", "mountEvent", "CustomEvent", "dispatchEvent", "defaultPrevented", "focusFirst", "removeLinks", "getTabbableCandidates", "setTimeout", "unmountEvent", "remove", "handleKeyDown", "loop", "isTabKey", "key", "altKey", "ctrlKey", "metaKey", "currentTarget", "first", "last", "getTabbableEdges", "hasTabbableElementsInside", "preventDefault", "shiftKey", "$45QHv$createElement", "candidates", "candidate", "findVisible", "reverse", "nodes", "walker", "createTreeWalker", "NodeFilter", "SHOW_ELEMENT", "acceptNode", "isHiddenInput", "tagName", "type", "disabled", "hidden", "FILTER_SKIP", "tabIndex", "FILTER_ACCEPT", "nextNode", "push", "currentNode", "elements", "element", "isHidden", "upTo", "getComputedStyle", "visibility", "undefined", "display", "parentElement", "isSelectableInput", "HTMLInputElement", "preventScroll", "createFocusScopesStack", "stack", "activeFocusScope", "arrayRemove", "unshift", "array", "item", "updatedArray", "index", "indexOf", "splice", "items", "filter", "useLayoutEffect", "Boolean", "globalThis", "document", "React", "useReactId", "React", "toString", "undefined", "count", "useId", "deterministicId", "id", "setId", "useState", "useLayoutEffect", "reactId", "String", "NAME", "Arrow", "React", "props", "forwardedRef", "arrowProps", "$jbnEx$createElement", "asChild", "children", "Root", "useSize", "element", "size", "setSize", "React", "undefined", "useLayoutEffect", "width", "offsetWidth", "height", "offsetHeight", "resizeObserver", "ResizeObserver", "entries", "Array", "isArray", "length", "entry", "borderSizeEntry", "borderSize", "observe", "box", "unobserve", "POPPER_NAME", "createPopperContext", "createPopperScope", "createContextScope", "PopperProvider", "usePopperContext", "Popper", "props", "children", "anchor", "setAnchor", "React", "$kY93V$createElement", "__scopePopper", "ANCHOR_NAME", "PopperAnchor", "forwardedRef", "anchorProps", "context", "ref", "composedRefs", "useComposedRefs", "onAnchorChange", "virtualRef", "current", "CONTENT_NAME", "PopperContentProvider", "useContentContext", "PopperContent", "collisionPadding", "collisionPaddingProp", "contentProps", "content", "setContent", "node", "arrow", "setArrow", "arrowSize", "useSize", "arrowWidth", "width", "arrowHeight", "height", "desiredPlacement", "side", "align", "top", "right", "bottom", "left", "boundary", "Array", "isArray", "collisionBoundary", "hasExplicitBoundaries", "length", "detectOverflowOptions", "padding", "filter", "isNotNull", "altBoundary", "middlewareData", "useFloating", "strategy", "placement", "whileElementsMounted", "args", "cleanup", "autoUpdate", "animationFrame", "updatePositionStrategy", "elements", "reference", "middleware", "offset", "mainAxis", "sideOffset", "alignmentAxis", "alignOffset", "avoidCollisions", "shift", "crossAxis", "limiter", "sticky", "limitShift", "undefined", "flip", "size", "apply", "availableHeight", "anchorWidth", "anchorHeight", "rects", "contentStyle", "floating", "style", "setProperty", "availableWidth", "floatingUIarrow", "element", "arrowPadding", "transformOrigin", "hideWhenDetached", "hide", "placedSide", "placedAlign", "getSideAndAlignFromPlacement", "handlePlaced", "useCallbackRef", "onPlaced", "useLayoutEffect", "isPositioned", "arrowX", "x", "arrowY", "y", "cannotCenterArrow", "centerOffset", "contentZIndex", "setContentZIndex", "window", "getComputedStyle", "zIndex", "refs", "setFloating", "floatingStyles", "transform", "minWidth", "join", "dir", "animation", "opacity", "referenceHidden", "ARROW_NAME", "OPPOSITE_SIDE", "PopperArrow", "arrowProps", "contentContext", "baseSide", "onArrowChange", "position", "visibility", "shouldHideArrow", "display", "value", "options", "name", "fn", "data", "isArrowHidden", "noArrowAlign", "start", "center", "end", "arrowXCenter", "arrowYCenter", "split", "Root", "Anchor", "Content", "Arrow", "PORTAL_NAME", "Portal", "React", "props", "forwardedRef", "globalThis", "document", "body", "portalProps", "container", "ReactDOM", "createPortal", "$7SXl2$createElement", "useControllableState", "onChange", "uncontrolledProp", "setUncontrolledProp", "useUncontrolledState", "isControlled", "prop", "undefined", "value", "handleChange", "useCallbackRef", "setValue", "React", "nextValue", "setter", "uncontrolledState", "defaultProp", "prevValueRef", "current", "usePrevious", "value", "ref", "React", "previous", "current", "NAME", "VisuallyHidden", "React", "props", "forwardedRef", "$kVwnw$createElement", "position", "border", "width", "height", "padding", "margin", "overflow", "clip", "whiteSpace", "wordWrap", "style", "React", "React", "OPEN_KEYS", "SELECTION_KEYS", "SELECT_NAME", "Collection", "useCollection", "createCollectionScope", "createCollection", "createSelectContext", "createSelectScope", "createContextScope", "createPopperScope", "usePopperScope", "SelectProvider", "useSelectContext", "SelectNativeOptionsProvider", "useSelectNativeOptionsContext", "Select", "props", "open", "openProp", "value", "valueProp", "required", "popperScope", "__scopeSelect", "trigger", "setTrigger", "React", "valueNode", "setValueNode", "valueNodeHasChildren", "setValueNodeHasChildren", "direction", "useDirection", "dir", "setOpen", "useControllableState", "prop", "defaultProp", "defaultOpen", "onChange", "onOpenChange", "setValue", "defaultValue", "onValueChange", "triggerPointerDownPosRef", "isFormControl", "Boolean", "closest", "nativeOptionsSet", "setNativeOptionsSet", "Set", "nativeSelectKey", "Array", "from", "map", "option", "join", "$01b9c$createElement", "useId", "prev", "add", "optionsSet", "delete", "children", "event", "target", "undefined", "TRIGGER_NAME", "SelectTrigger", "forwardedRef", "triggerProps", "context", "isDisabled", "disabled", "composedRefs", "useComposedRefs", "onTriggerChange", "getItems", "searchRef", "handleTypeaheadSearch", "resetTypeahead", "useTypeaheadSearch", "search", "enabledItems", "filter", "item", "currentItem", "find", "nextItem", "findNextItem", "handleOpen", "contentId", "shouldShowPlaceholder", "composeEventHandlers", "onClick", "currentTarget", "focus", "onPointerDown", "hasPointerCapture", "pointerId", "releasePointerCapture", "button", "ctrlKey", "current", "x", "Math", "round", "pageX", "y", "pageY", "preventDefault", "onKeyDown", "isTypingAhead", "isModifierKey", "altKey", "metaKey", "key", "length", "includes", "VALUE_NAME", "SelectValue", "valueProps", "onValueNodeHasChildrenChange", "hasChildren", "onValueNodeChange", "useLayoutEffect", "pointerEvents", "$01b9c$Fragment", "placeholder", "ICON_NAME", "SelectIcon", "iconProps", "PORTAL_NAME", "SelectPortal", "CONTENT_NAME", "SelectContent", "fragment", "setFragment", "DocumentFragment", "frag", "ReactDOM", "CONTENT_MARGIN", "SelectContentProvider", "useSelectContentContext", "CONTENT_IMPL_NAME", "SelectContentImpl", "contentProps", "content", "setContent", "viewport", "setViewport", "node", "selectedItem", "setSelectedItem", "selectedItemText", "setSelectedItemText", "isPositioned", "setIsPositioned", "firstValidItemFoundRef", "hideOthers", "useFocusGuards", "focusFirst", "candidates", "firstItem", "restItems", "ref", "lastItem", "slice", "PREVIOUSLY_FOCUSED_ELEMENT", "document", "activeElement", "candidate", "scrollIntoView", "block", "scrollTop", "scrollHeight", "focusSelectedItem", "pointerMoveDelta", "handlePointerMove", "abs", "handlePointerUp", "contains", "removeEventListener", "addEventListener", "capture", "once", "close", "window", "setTimeout", "itemRefCallback", "isFirstValidItem", "isSelectedItem", "handleItemLeave", "itemTextRefCallback", "SelectPosition", "position", "SelectPopperPosition", "SelectItemAlignedPosition", "popperContentProps", "Slot", "onCloseAutoFocus", "preventScroll", "display", "flexDirection", "outline", "style", "items", "candidateNodes", "reverse", "currentElement", "currentIndex", "indexOf", "ITEM_ALIGNED_POSITION_NAME", "popperProps", "contentContext", "contentWrapper", "setContentWrapper", "shouldExpandOnScrollRef", "shouldRepositionRef", "triggerRect", "getBoundingClientRect", "contentRect", "valueNodeRect", "itemTextRect", "itemTextOffset", "left", "leftDelta", "minContentWidth", "width", "contentWidth", "max", "rightEdge", "innerWidth", "clampedLeft", "clamp", "minWidth", "right", "rightDelta", "leftEdge", "clampedRight", "availableHeight", "innerHeight", "itemsHeight", "contentStyles", "getComputedStyle", "contentBorderTopWidth", "parseInt", "borderTopWidth", "contentPaddingTop", "paddingTop", "contentBorderBottomWidth", "borderBottomWidth", "contentPaddingBottom", "paddingBottom", "fullContentHeight", "minContentHeight", "min", "offsetHeight", "viewportStyles", "viewportPaddingTop", "viewportPaddingBottom", "topEdgeToTriggerMiddle", "top", "height", "triggerMiddleToBottomEdge", "selectedItemHalfHeight", "itemOffsetMiddle", "offsetTop", "contentTopToItemMiddle", "itemMiddleToContentBottom", "willAlignWithoutTopOverflow", "isLastItem", "bottom", "viewportOffsetBottom", "clientHeight", "clampedTriggerMiddleToBottomEdge", "isFirstItem", "clampedTopEdgeToTriggerMiddle", "margin", "minHeight", "maxHeight", "onPlaced", "requestAnimationFrame", "contentZIndex", "setContentZIndex", "zIndex", "handleScrollButtonChange", "boxSizing", "POPPER_POSITION_NAME", "SelectViewportProvider", "useSelectViewportContext", "VIEWPORT_NAME", "SelectViewport", "viewportProps", "viewportContext", "onViewportChange", "prevScrollTopRef", "__html", "flex", "overflow", "onScroll", "scrolledBy", "cssMinHeight", "parseFloat", "cssHeight", "prevHeight", "nextHeight", "clampedNextHeight", "heightDiff", "justifyContent", "GROUP_NAME", "SelectGroupContextProvider", "useSelectGroupContext", "SelectGroup", "groupProps", "groupId", "LABEL_NAME", "SelectLabel", "labelProps", "groupContext", "id", "ITEM_NAME", "SelectItemContextProvider", "useSelectItemContext", "SelectItem", "textValue", "textValueProp", "itemProps", "isSelected", "setTextValue", "isFocused", "setIsFocused", "textId", "handleSelect", "Error", "prevTextValue", "textContent", "trim", "onFocus", "onBlur", "onPointerUp", "onPointerMove", "onItemLeave", "onPointerLeave", "ITEM_TEXT_NAME", "SelectItemText", "itemTextProps", "itemContext", "nativeOptionsContext", "itemTextNode", "setItemTextNode", "onItemTextChange", "nativeOption", "onNativeOptionRemove", "onNativeOptionAdd", "ITEM_INDICATOR_NAME", "SelectItemIndicator", "itemIndicatorProps", "SCROLL_UP_BUTTON_NAME", "SelectScrollUpButton", "canScrollUp", "setCanScrollUp", "onScrollButtonChange", "handleScroll", "SCROLL_DOWN_BUTTON_NAME", "SelectScrollDownButton", "canScrollDown", "setCanScrollDown", "maxScroll", "ceil", "SelectScrollButtonImpl", "scrollIndicatorProps", "autoScrollTimerRef", "clearAutoScrollTimer", "clearInterval", "activeItem", "flexShrink", "setInterval", "onAutoScroll", "SEPARATOR_NAME", "SelectSeparator", "separatorProps", "ARROW_NAME", "SelectArrow", "arrowProps", "BubbleSelect", "selectProps", "prevValue", "usePrevious", "select", "selectProto", "HTMLSelectElement", "prototype", "descriptor", "Object", "getOwnPropertyDescriptor", "set", "Event", "bubbles", "call", "dispatchEvent", "displayName", "onSearchChange", "handleSearchChange", "useCallbackRef", "timerRef", "updateSearch", "clearTimeout", "isRepeated", "every", "char", "normalizedSearch", "currentItemIndex", "wrappedItems", "wrapArray", "excludeCurrentItem", "v", "toLowerCase", "startsWith", "array", "startIndex", "_", "index", "Root", "Trigger", "Value", "Icon", "Portal", "Content", "Viewport", "Group", "Label", "Item", "ItemText", "ItemIndicator", "ScrollUpButton", "ScrollDownButton", "Separator", "Arrow"]
}
